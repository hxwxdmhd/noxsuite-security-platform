{
  "summary": {
    "total_issues": 6719,
    "files_analyzed": 546,
    "lines_analyzed": 157416,
    "issue_types": {
      "logging": 1402,
      "type_hint": 2197,
      "style": 224,
      "performance": 2624,
      "deprecated": 28,
      "compatibility": 170,
      "security": 40,
      "error_handling": 34
    },
    "severities": {
      "low": 6439,
      "medium": 49,
      "high": 32,
      "critical": 199
    },
    "top_issues": [
      {
        "file_path": "/home/engine/project/security/quarantine/quarantined_20250718_120108_routes.py",
        "line_number": 4,
        "column": 18,
        "issue_type": "compatibility",
        "severity": "critical",
        "title": "Syntax Error",
        "description": "Syntax error: invalid syntax",
        "suggestion": "",
        "code_snippet": "",
        "rule_id": "syntax-error"
      },
      {
        "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
        "line_number": 356,
        "column": 9,
        "issue_type": "compatibility",
        "severity": "critical",
        "title": "Syntax Error",
        "description": "Syntax error: invalid syntax",
        "suggestion": "",
        "code_snippet": "",
        "rule_id": "syntax-error"
      },
      {
        "file_path": "/home/engine/project/archive/deprecated/copilot/audit_report_generator.py",
        "line_number": 18,
        "column": 5,
        "issue_type": "compatibility",
        "severity": "critical",
        "title": "Syntax Error",
        "description": "Syntax error: expected an indented block after function definition on line 17",
        "suggestion": "",
        "code_snippet": "",
        "rule_id": "syntax-error"
      },
      {
        "file_path": "/home/engine/project/archive/deprecated/NoxPanel/main.py",
        "line_number": 4,
        "column": 16,
        "issue_type": "compatibility",
        "severity": "critical",
        "title": "Syntax Error",
        "description": "Syntax error: invalid syntax",
        "suggestion": "",
        "code_snippet": "",
        "rule_id": "syntax-error"
      },
      {
        "file_path": "/home/engine/project/archive/deprecated/NoxPanel/run_all_tests.py",
        "line_number": 4,
        "column": 25,
        "issue_type": "compatibility",
        "severity": "critical",
        "title": "Syntax Error",
        "description": "Syntax error: invalid syntax",
        "suggestion": "",
        "code_snippet": "",
        "rule_id": "syntax-error"
      },
      {
        "file_path": "/home/engine/project/archive/deprecated/AI/init_noxvalidator_advanced.py",
        "line_number": 4,
        "column": 38,
        "issue_type": "compatibility",
        "severity": "critical",
        "title": "Syntax Error",
        "description": "Syntax error: invalid syntax",
        "suggestion": "",
        "code_snippet": "",
        "rule_id": "syntax-error"
      },
      {
        "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
        "line_number": 77,
        "column": 5,
        "issue_type": "compatibility",
        "severity": "critical",
        "title": "Syntax Error",
        "description": "Syntax error: expected an indented block after function definition on line 76",
        "suggestion": "",
        "code_snippet": "",
        "rule_id": "syntax-error"
      },
      {
        "file_path": "/home/engine/project/archive/deprecated/AI/advanced_ai_orchestrator.py",
        "line_number": 72,
        "column": 5,
        "issue_type": "compatibility",
        "severity": "critical",
        "title": "Syntax Error",
        "description": "Syntax error: expected an indented block after function definition on line 71",
        "suggestion": "",
        "code_snippet": "",
        "rule_id": "syntax-error"
      },
      {
        "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
        "line_number": 1444,
        "column": 19,
        "issue_type": "compatibility",
        "severity": "critical",
        "title": "Syntax Error",
        "description": "Syntax error: invalid syntax",
        "suggestion": "",
        "code_snippet": "",
        "rule_id": "syntax-error"
      },
      {
        "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
        "line_number": 5,
        "column": 37,
        "issue_type": "compatibility",
        "severity": "critical",
        "title": "Syntax Error",
        "description": "Syntax error: invalid syntax",
        "suggestion": "",
        "code_snippet": "",
        "rule_id": "syntax-error"
      }
    ]
  },
  "issues": [
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 22,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 23,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 27,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 118,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 94,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 95,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 102,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 116,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 122,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 130,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 133,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/run_code_analysis.py",
      "line_number": 139,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 49,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'write_log' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 49,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'message' in function 'write_log' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 52,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 54,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'is_protected' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 54,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'path' in function 'is_protected' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 60,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'backup_and_delete' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 60,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'path' in function 'backup_and_delete' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 76,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'find_targets' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 86,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'cleanup_diagnostics' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 95,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_todo' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 95,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'deleted' in function 'generate_todo' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 95,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'skipped' in function 'generate_todo' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 116,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_rollback' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 132,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 133,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 134,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 135,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 136,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 141,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 144,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 147,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/project_cleanup_migration_working.py",
      "line_number": 159,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 23,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 24,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 28,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'check_git_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 41,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'count_backup_files' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 47,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_analysis_comparison' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 95,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_improvement_report' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 198,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 204,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 205,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 206,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 207,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 208,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 210,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 213,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 214,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 216,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 218,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 219,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 221,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 223,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 224,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 228,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 229,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 230,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 231,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 232,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 235,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 236,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 238,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 240,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 241,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 243,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 244,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 246,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 247,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 249,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 250,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 252,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 253,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 260,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 261,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 262,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 263,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 264,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 267,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 11,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/validate_improvements.py",
      "line_number": 1,
      "column": 0,
      "issue_type": "logging",
      "severity": "medium",
      "title": "Missing Logging Import",
      "description": "File uses logging but doesn't import logging module",
      "suggestion": "Add: import logging",
      "code_snippet": "",
      "rule_id": "missing-logging-import"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 26,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 34,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 47,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'improve_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 108,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_fix_datetime_deprecations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 150,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_fix_print_statements' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 218,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_fix_bare_except' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 236,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_add_type_imports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 289,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_improve_docstrings' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 322,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_fix_imports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 386,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'improve_directory' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 425,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 136,
      "column": 60,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "content = content.replace('datetime.utcnow()', 'datetime.now(timezone.utc)')",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 139,
      "column": 14,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.utcfromtimestamp() is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.fromtimestamp(ts, tz=timezone.utc)",
      "code_snippet": "# Fix datetime.utcfromtimestamp",
      "rule_id": "deprecated-datetime-utcfromtimestamp"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 140,
      "column": 12,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.utcfromtimestamp() is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.fromtimestamp(ts, tz=timezone.utc)",
      "code_snippet": "if 'datetime.utcfromtimestamp' in content:",
      "rule_id": "deprecated-datetime-utcfromtimestamp"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 14,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 92,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 99,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 105,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 472,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 481,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 487,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 488,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 489,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 490,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 495,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/improve_codebase.py",
      "line_number": 503,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 30,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'sha256sum' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 30,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'filepath' in function 'sha256sum' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 38,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_last_modified' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 38,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'filepath' in function 'get_last_modified' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 42,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'is_legacy_name' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 42,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'filename' in function 'is_legacy_name' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 46,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'parse_imports' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 46,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'filepath' in function 'parse_imports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'scan_files' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'root' in function 'scan_files' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 90,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'analyze_file' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 90,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'filepath' in function 'analyze_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 90,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'all_imports' in function 'analyze_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 90,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'hash_map' in function 'analyze_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'call_ai_suggester' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'report' in function 'call_ai_suggester' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 134,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_reports' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 134,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'results' in function 'generate_reports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 134,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'metrics' in function 'generate_reports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 151,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'perform_cleanup' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 151,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'results' in function 'perform_cleanup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 151,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'execute' in function 'perform_cleanup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 155,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 157,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 159,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 161,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 165,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 175,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 178,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 184,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 185,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 187,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 195,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/cleanup_project.py",
      "line_number": 211,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/security/quarantine/quarantined_20250718_120108_routes.py",
      "line_number": 4,
      "column": 18,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 22,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 30,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_pool' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 45,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_connection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 61,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'return_connection' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 61,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'return_connection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 78,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'close_all' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 78,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'close_all' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 94,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 108,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_connection' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 108,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_connection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 117,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'init_database' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 117,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'init_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 140,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_core_tables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 202,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_knowledge_tables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 263,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_ai_tables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 324,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_session_tables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 369,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_indexes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 422,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_metadata' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 444,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_default_user' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 469,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'close' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 469,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'close' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 473,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__enter__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 476,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 476,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_type' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 476,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_val' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 476,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_tb' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 439,
      "column": 12,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "datetime.now(timezone.utc).isoformat(),",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 451,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 105,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database.py",
      "line_number": 137,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 356,
      "column": 9,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 76,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 70,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 86,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 89,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 93,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 106,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 109,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 113,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 153,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 157,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 185,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 189,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 221,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 226,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 374,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 380,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 388,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 404,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 416,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 417,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_admin.py",
      "line_number": 432,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 20,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 24,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'up' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'down' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'up' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 45,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'down' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 60,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 65,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_register_migrations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 75,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_connection' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 75,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_connection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_ensure_migration_table' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 97,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_current_version' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 110,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_target_version' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 114,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_pending_migrations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 119,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_applied_migrations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 135,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'migrate_up' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 193,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'migrate_down' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 238,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 258,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'auto_migrate' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 269,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_schema' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 306,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 160,
      "column": 33,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "start_time = datetime.now(timezone.utc)",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 168,
      "column": 42,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "execution_time = (datetime.now(timezone.utc) - start_time).total_seconds()",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 176,
      "column": 28,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "datetime.now(timezone.utc).isoformat(),",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 214,
      "column": 33,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "start_time = datetime.now(timezone.utc)",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 224,
      "column": 42,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "execution_time = (datetime.now(timezone.utc) - start_time).total_seconds()",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 308,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 107,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 132,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 144,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 154,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 161,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 180,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 183,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 186,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 190,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 199,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 210,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 215,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 225,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 228,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 231,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 235,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 266,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 292,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 296,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 302,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 342,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 343,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 344,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 345,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/migrations.py",
      "line_number": 350,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 21,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 24,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_serialize_json' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 30,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_deserialize_json' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 42,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_user' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 66,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_user' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 89,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'authenticate_user' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 100,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_last_login' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 100,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_last_login' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 114,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_knowledge_item' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 141,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_knowledge_item' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 171,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'search_knowledge_items' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 207,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_knowledge_categories' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 225,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_tag' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 240,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_tag' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 258,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_tag_to_knowledge_item' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 279,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_conversation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 297,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_message' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 322,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_conversation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 361,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_user_conversations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 390,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 408,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 439,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'invalidate_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 451,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup_expired_sessions' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 472,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log_action' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 491,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_audit_logs' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 63,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 86,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 109,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 138,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 168,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 204,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 219,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 237,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 255,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 273,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 294,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 319,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 358,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 384,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 405,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 436,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 448,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 466,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 488,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/repositories.py",
      "line_number": 527,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 25,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 53,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_apply_migrations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 116,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'backup_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 153,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'restore_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 189,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'optimize_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 212,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup_old_data' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 258,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_health_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 305,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'close' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 305,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'close' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 313,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__enter__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 316,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 316,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_type' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 316,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_val' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 316,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_tb' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 331,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'close_database_service' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 165,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 58,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 68,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 113,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 146,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 150,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 176,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 186,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 209,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 251,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 255,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 298,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/database_service.py",
      "line_number": 311,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 19,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'format' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 58,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'format' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 101,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 111,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_default_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 174,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_logging' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 207,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_clear_handlers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 220,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_handlers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 235,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_handler' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 276,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_loggers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 299,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_find_handler' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 317,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_formatter' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 333,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_log_level' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 344,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_parse_size' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 364,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_logger' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 392,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 401,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_log_stats' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 456,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'filter' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 456,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'filter' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 456,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'record' in function 'filter' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/logging_config.py",
      "line_number": 13,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 42,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_error_id' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 76,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 90,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__str__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 98,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 107,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 116,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 125,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 134,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 143,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 152,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 163,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'handle_error' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 212,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_error_summary' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 236,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'clear_recent_errors' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 236,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'clear_recent_errors' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 242,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'error_handler' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 258,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'wrapper' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 68,
      "column": 25,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "self.timestamp = datetime.now(timezone.utc)",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 73,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 197,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 199,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 201,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/error_handling.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/datetime_utils.py",
      "line_number": 32,
      "column": 15,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "return datetime.now(timezone.utc)",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/datetime_utils.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/datetime_utils.py",
      "line_number": 174,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/datetime_utils.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 57,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 138,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 144,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 206,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_analyze_ast' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 220,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'visit_FunctionDef' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 220,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'visit_FunctionDef' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 220,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'node' in function 'visit_FunctionDef' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 252,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'visit_Try' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 252,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'visit_Try' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 252,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'node' in function 'visit_Try' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 270,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'visit_Call' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 270,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'visit_Call' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 270,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'node' in function 'visit_Call' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 292,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_analyze_patterns' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 338,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_analyze_imports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 384,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_analyze_logging' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 441,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_directory' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 473,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_summary' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 503,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 78,
      "column": 9,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "'datetime.now(timezone.utc)': {",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 79,
      "column": 28,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "'replacement': 'datetime.now(timezone.utc)',",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 80,
      "column": 23,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "'reason': 'datetime.now(timezone.utc) is deprecated in Python 3.12+',",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 83,
      "column": 9,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.utcfromtimestamp() is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.fromtimestamp(ts, tz=timezone.utc)",
      "code_snippet": "'datetime.utcfromtimestamp': {",
      "rule_id": "deprecated-datetime-utcfromtimestamp"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 85,
      "column": 23,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.utcfromtimestamp() is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.fromtimestamp(ts, tz=timezone.utc)",
      "code_snippet": "'reason': 'datetime.utcfromtimestamp() is deprecated in Python 3.12+',",
      "rule_id": "deprecated-datetime-utcfromtimestamp"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 88,
      "column": 9,
      "issue_type": "deprecated",
      "severity": "medium",
      "title": "Deprecated Code",
      "description": "collections.Mapping moved to collections.abc",
      "suggestion": "Replace with: collections.abc.Mapping",
      "code_snippet": "'collections.Mapping': {",
      "rule_id": "deprecated-collections-Mapping"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 90,
      "column": 23,
      "issue_type": "deprecated",
      "severity": "medium",
      "title": "Deprecated Code",
      "description": "collections.Mapping moved to collections.abc",
      "suggestion": "Replace with: collections.abc.Mapping",
      "code_snippet": "'reason': 'collections.Mapping moved to collections.abc',",
      "rule_id": "deprecated-collections-Mapping"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 93,
      "column": 9,
      "issue_type": "deprecated",
      "severity": "medium",
      "title": "Deprecated Code",
      "description": "collections.MutableMapping moved to collections.abc",
      "suggestion": "Replace with: collections.abc.MutableMapping",
      "code_snippet": "'collections.MutableMapping': {",
      "rule_id": "deprecated-collections-MutableMapping"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 95,
      "column": 23,
      "issue_type": "deprecated",
      "severity": "medium",
      "title": "Deprecated Code",
      "description": "collections.MutableMapping moved to collections.abc",
      "suggestion": "Replace with: collections.abc.MutableMapping",
      "code_snippet": "'reason': 'collections.MutableMapping moved to collections.abc',",
      "rule_id": "deprecated-collections-MutableMapping"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 98,
      "column": 9,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "imp module is deprecated, use importlib",
      "suggestion": "Replace with: importlib",
      "code_snippet": "'imp.': {",
      "rule_id": "deprecated-imp-"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 103,
      "column": 9,
      "issue_type": "deprecated",
      "severity": "critical",
      "title": "Deprecated Code",
      "description": "distutils is deprecated and removed in Python 3.12",
      "suggestion": "Replace with: setuptools or packaging",
      "code_snippet": "'distutils': {",
      "rule_id": "deprecated-distutils"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 105,
      "column": 23,
      "issue_type": "deprecated",
      "severity": "critical",
      "title": "Deprecated Code",
      "description": "distutils is deprecated and removed in Python 3.12",
      "suggestion": "Replace with: setuptools or packaging",
      "code_snippet": "'reason': 'distutils is deprecated and removed in Python 3.12',",
      "rule_id": "deprecated-distutils"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 112,
      "column": 9,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'eval(': {",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 113,
      "column": 23,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'reason': 'eval() can execute arbitrary code',",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 116,
      "column": 9,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'exec(': {",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 117,
      "column": 23,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'reason': 'exec() can execute arbitrary code',",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 120,
      "column": 9,
      "issue_type": "security",
      "severity": "medium",
      "title": "Security Issue",
      "description": "Use subprocess.run() instead for better security",
      "suggestion": "",
      "code_snippet": "'subprocess.call': {",
      "rule_id": "security-subprocess-call"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 124,
      "column": 9,
      "issue_type": "security",
      "severity": "high",
      "title": "Security Issue",
      "description": "shell=True can be vulnerable to injection attacks",
      "suggestion": "",
      "code_snippet": "'shell=True': {",
      "rule_id": "security-shellTrue"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 125,
      "column": 23,
      "issue_type": "security",
      "severity": "high",
      "title": "Security Issue",
      "description": "shell=True can be vulnerable to injection attacks",
      "suggestion": "",
      "code_snippet": "'reason': 'shell=True can be vulnerable to injection attacks',",
      "rule_id": "security-shellTrue"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 128,
      "column": 9,
      "issue_type": "security",
      "severity": "high",
      "title": "Security Issue",
      "description": "pickle.load can execute arbitrary code from untrusted data",
      "suggestion": "",
      "code_snippet": "'pickle.load': {",
      "rule_id": "security-pickle-load"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 129,
      "column": 23,
      "issue_type": "security",
      "severity": "high",
      "title": "Security Issue",
      "description": "pickle.load can execute arbitrary code from untrusted data",
      "suggestion": "",
      "code_snippet": "'reason': 'pickle.load can execute arbitrary code from untrusted data',",
      "rule_id": "security-pickle-load"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 132,
      "column": 9,
      "issue_type": "security",
      "severity": "high",
      "title": "Security Issue",
      "description": "Use yaml.safe_load() instead to prevent code execution",
      "suggestion": "",
      "code_snippet": "'yaml.load': {",
      "rule_id": "security-yaml-load"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 515,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/code_analysis.py",
      "line_number": 192,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 14,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 25,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 40,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 51,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_default_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 96,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 119,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'set' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 138,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 152,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_deep_update' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 165,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 190,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'reset_to_defaults' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 31,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 37,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 46,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 48,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 116,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 133,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 135,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 149,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/NoxPanel/noxcore/utils/config.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/copilot/audit_report_generator.py",
      "line_number": 18,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 17",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 129,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 137,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'detect_voice_activity' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 155,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_recording' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 161,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_recording' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 174,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 182,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_engine' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 205,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_pyttsx3' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 230,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_gtts' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 235,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_azure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 265,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_google' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 280,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_openai' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 300,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'synthesize_speech' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 329,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_synthesize_pyttsx3' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 347,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_synthesize_gtts' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 363,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_synthesize_azure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 390,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_synthesize_google' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 421,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_synthesize_openai' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 443,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_azure_voice' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 465,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 478,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_calibrate_microphone' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 487,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'recognize_speech' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 527,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'continuous_recognition' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 536,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'recognition_callback' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 536,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'recognizer' in function 'recognition_callback' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 536,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'audio' in function 'recognition_callback' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 558,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 562,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'register_command' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 578,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'process_command' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 621,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_extract_parameters' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 634,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'list_commands' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 649,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 668,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_register_default_commands' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 689,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'speak' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 733,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'listen' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 770,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'process_voice_command' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 774,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_conversation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 806,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_play_audio' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 814,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_handle_hello' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 820,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_handle_time' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 827,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_handle_date' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 834,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_handle_help' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 841,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_handle_stop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 847,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_handle_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 853,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_conversation_history' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 857,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'clear_conversation_history' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 862,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 868,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 869,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 872,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 876,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 886,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 888,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 891,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 894,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 366,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 152,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 198,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 201,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 262,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 277,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 297,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 326,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 380,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 387,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 440,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 485,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 511,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 521,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 524,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 543,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 576,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 595,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 614,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 618,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 706,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 728,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 751,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 765,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 802,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/voice/tts_system.py",
      "line_number": 895,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/vault_rotator.py",
      "line_number": 13,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/vault_rotator.py",
      "line_number": 18,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'rotate_credentials' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/vault_rotator.py",
      "line_number": 18,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'rotate_credentials' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/vault_rotator.py",
      "line_number": 47,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 115,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 169,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 177,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_master_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 195,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_master_tables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 260,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_master_tables_sqlite' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 333,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_tenant_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 364,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_tenant_tables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 364,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'engine' in function '_create_tenant_tables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 387,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_tenant_tables_sqlite' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 387,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'conn' in function '_create_tenant_tables_sqlite' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 410,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_tenant_session' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 410,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_tenant_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 437,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 454,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_tenant' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 504,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_store_tenant' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 543,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_default_quotas' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 588,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_store_quota' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 623,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_billing_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 651,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_store_billing_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 690,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_tenant' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 782,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_tenant_by_domain' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 809,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_tenant' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 868,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'delete_tenant' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 930,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'list_tenants' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 983,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_tenant_quotas' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1030,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_resource_quota' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1047,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'consume_resource' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1085,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'track_usage' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1085,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'track_usage' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1132,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1136,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_tenant_from_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1136,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'request' in function 'get_tenant_from_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1168,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'process_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1168,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'process_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1168,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'request' in function 'process_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1168,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'handler' in function 'process_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1190,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1193,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1194,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1203,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1213,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1218,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1224,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1231,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1236,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1239,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1241,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1244,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 51,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 193,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 258,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 331,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 357,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 361,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 385,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 407,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 429,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 449,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 497,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 501,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 541,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 586,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 621,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 649,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 688,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 779,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 806,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 861,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 865,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 923,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 927,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 980,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1027,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1044,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1082,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1125,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1165,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1187,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_manager.py",
      "line_number": 1245,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/master_dashboard.py",
      "line_number": 23,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/master_dashboard.py",
      "line_number": 82,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_routes' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/master_dashboard.py",
      "line_number": 82,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/master_dashboard.py",
      "line_number": 86,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'master_dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/master_dashboard.py",
      "line_number": 238,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/master_dashboard.py",
      "line_number": 247,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/master_dashboard.py",
      "line_number": 247,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/master_dashboard.py",
      "line_number": 290,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 74,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'context_info' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 105,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'context_health' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 124,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'context_test' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'aethercore_info' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 192,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'aethercore_models' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 231,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'aethercore_load_model' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 252,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'aethercore_unload_model' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 267,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'aethercore_serve' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 299,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'aethercore_health' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 319,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'system_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 331,
      "column": 4,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 369,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'system_services' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 423,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 428,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'version' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli_v2.py",
      "line_number": 24,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 143,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 156,
      "column": 8,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_service_processes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 196,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 228,
      "column": 4,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 262,
      "column": 8,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 293,
      "column": 4,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 308,
      "column": 4,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 333,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'start' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 402,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'logs' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 466,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 483,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'health' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 517,
      "column": 4,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 543,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'info' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 598,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'context' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 685,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'version' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 475,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 713,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/heimnetz_cli.py",
      "line_number": 1,
      "column": 0,
      "issue_type": "logging",
      "severity": "medium",
      "title": "Missing Logging Import",
      "description": "File uses logging but doesn't import logging module",
      "suggestion": "Add: import logging",
      "code_snippet": "",
      "rule_id": "missing-logging-import"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 60,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 185,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'deploy_infrastructure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 221,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_deploy_postgresql' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 244,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_deploy_redis' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 261,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_deploy_monitoring' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 290,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'deploy_core_services' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 331,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_deploy_tenant_manager' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 376,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_deploy_auth_manager' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 423,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_deploy_resource_monitor' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 471,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_deploy_api_gateway' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 519,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_deploy_web_interface' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 568,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'deploy_load_balancer' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 632,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_health_checks' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 678,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_check_database_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 697,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_check_redis_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 716,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_check_api_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 733,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_check_web_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 750,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_check_load_balancer_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 767,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'finalize_deployment' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 800,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_default_tenant' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 809,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_monitoring_dashboards' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 818,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_deployment_summary' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 858,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_full_deployment' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 900,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_requirements_file' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 920,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 923,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 924,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 936,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 937,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 938,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 939,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 940,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 941,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 942,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 944,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 945,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 948,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 965,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 968,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 753,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 58,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 178,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 182,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 242,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 259,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 288,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 328,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 374,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 421,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 469,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 517,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 566,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 629,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 675,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 694,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 713,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 730,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 747,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 764,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 796,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 807,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 816,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 853,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 856,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_enterprise.py",
      "line_number": 896,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 51,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 59,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_regions' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 59,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_regions' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 129,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_optimal_region' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 146,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_region_health' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 146,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_region_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 158,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 164,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_edge_nodes' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 164,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_edge_nodes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 223,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_edge_node' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 234,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_node_health' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 234,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_node_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 243,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 249,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_replication' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 249,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_replication' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 286,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 298,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 338,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_global_replication' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 338,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_global_replication' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 354,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_service_endpoint' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 384,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 389,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_routes' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 389,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 393,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'global_dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 566,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_regions' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 584,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_edge_nodes' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 601,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_replication' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 617,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_endpoint' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 626,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 18,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 221,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 277,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 280,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 641,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 642,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/global_scalability.py",
      "line_number": 643,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'init_managers' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 100,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_tenant_from_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 128,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_current_user' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'require_auth' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'f' in function 'require_auth' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 146,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'decorated_function' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 154,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'require_tenant' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 154,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'f' in function 'require_tenant' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 157,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'decorated_function' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 165,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'require_permission' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 167,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'decorator' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 167,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'f' in function 'decorator' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 169,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'decorated_function' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 183,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'login' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 235,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'logout' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 241,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'register' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 288,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 354,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'users' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 393,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'resources' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 438,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'billing' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 482,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_keys' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 523,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'settings' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 541,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_tenant_info' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 561,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_user_profile' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 584,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_resources_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 618,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_system_metrics' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 644,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_alerts' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 675,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_create_user' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 714,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_create_api_key' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 763,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'not_found' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 763,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'not_found' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 767,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'internal_error' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 767,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'internal_error' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 771,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_templates' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 1120,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 1123,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 1124,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 1141,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 29,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 93,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 125,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 140,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 231,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 280,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 347,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 386,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 431,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 475,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 516,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 534,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 556,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 577,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 611,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 637,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 668,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 707,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 758,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 1118,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/web_interface.py",
      "line_number": 1142,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 201,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 234,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 252,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_resource_tables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 350,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_resource_tables_sqlite' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 455,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'start_monitoring' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 455,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_monitoring' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 475,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'stop_monitoring' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 475,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_monitoring' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 487,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_monitor_loop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 508,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_collect_system_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 550,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_collect_container_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 602,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_store_system_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 654,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_store_metric' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 702,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_tenant_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 762,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_latest_system_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 830,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 840,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load_quota_policies' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 892,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_quota_policy' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 957,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_quota_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1011,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_store_alert' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1052,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_auto_scale_resource' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1096,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_tenant_alerts' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1156,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1159,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1160,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1169,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1176,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1180,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1181,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1182,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1183,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1184,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1187,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1202,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1203,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1204,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1205,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1208,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1215,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1217,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1220,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1227,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1229,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1234,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1237,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1239,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1242,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1245,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1248,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1251,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 74,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 229,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 250,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 348,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 453,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 470,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 473,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 485,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 505,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 547,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 599,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 652,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 700,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 759,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 822,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 890,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 950,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 954,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1008,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1050,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1091,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1094,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1153,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/resource_manager.py",
      "line_number": 1252,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 51,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 58,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'start_collection' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 58,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_collection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 66,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'stop_collection' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 66,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_collection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 72,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_collect_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 90,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_collect_system_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 129,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_collect_business_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 168,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_collect_user_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 207,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_aggregate_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 236,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 251,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 256,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load_report_templates' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 285,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 350,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 354,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'list_reports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 369,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 373,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_build_schema' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 426,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'execute_query' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 463,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 475,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 512,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'cleanup' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 512,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 519,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 524,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_routes' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 524,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 528,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'analytics_dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 772,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_metrics' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 781,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_reports' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 787,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_report_detail' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 787,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'report_id' in function 'api_report_detail' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 795,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_generate_report' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 808,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_graphql' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 824,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_schema' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 828,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 21,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/advanced_analytics.py",
      "line_number": 87,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 33,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 47,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 88,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_database' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 88,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 190,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_service_launcher' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 255,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'start_service' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 255,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_service' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 277,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_monitoring_dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 277,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_monitoring_dashboard' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 432,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'deploy' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 432,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'deploy' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 507,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'cleanup' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 507,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 514,
      "column": 12,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 517,
      "column": 16,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 520,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 524,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 525,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 533,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 540,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 542,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 544,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 548,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 552,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/deploy_standalone.py",
      "line_number": 290,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 76,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 76,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'redis_client' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 81,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_allowed' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 97,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_redis_rate_limit' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 132,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_local_rate_limit' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 164,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 172,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'call' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 172,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'call' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 172,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'func' in function 'call' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 188,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_should_attempt_reset' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 195,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_on_success' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 200,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_on_failure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 214,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 264,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_analytics_db' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 310,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_start_background_tasks' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 326,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_cache_cleanup_task' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 346,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_analytics_aggregation_task' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 358,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_aggregate_analytics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 383,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_tenant_from_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 383,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'request' in function 'get_tenant_from_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 413,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'authenticate_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 413,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'request' in function 'authenticate_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 450,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_rate_limit' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 477,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_log_rate_limit_violation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 501,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_cached_response' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 517,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'set_cached_response' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 517,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'set_cached_response' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 526,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'route_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 526,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'request' in function 'route_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 570,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'make_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 611,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_log_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 611,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'request' in function '_log_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 642,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'process_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 642,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'request' in function 'process_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 687,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'before_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 692,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'after_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 692,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'response' in function 'after_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 707,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'health_check' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 716,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'status_check' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 731,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_proxy' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 731,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'path' in function 'api_proxy' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 748,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'analytics_requests' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 778,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'analytics_rate_limits' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 805,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'not_found' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 805,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'not_found' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 809,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'internal_error' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 809,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'internal_error' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 812,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 815,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 816,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 827,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 829,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 830,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 833,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 836,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 839,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 841,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 842,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 843,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 844,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 855,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 39,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 94,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 129,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 156,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 207,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 229,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 308,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 324,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 343,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 355,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 378,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 381,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 410,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 447,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 474,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 499,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 514,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 524,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 604,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 640,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 679,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 744,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 774,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 801,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/api_gateway.py",
      "line_number": 856,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 64,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 132,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 196,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 205,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_default_admin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 217,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'authenticate_user' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 225,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 247,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 269,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_token' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 286,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_token' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 321,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 325,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_notification' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 348,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_user_notifications' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 364,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'mark_as_read' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 376,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 396,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_systems' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 423,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_app' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 457,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_add_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 463,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_current_user' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 681,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'start_background_tasks' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 681,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_background_tasks' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 696,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_system_monitoring_loop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 708,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_check_system_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 736,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_notification_broadcast_loop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 776,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 776,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 801,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 804,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 805,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 808,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 809,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 817,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 819,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 685,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 145,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 163,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 173,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 184,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 244,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 313,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 345,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 404,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 411,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 421,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 455,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 529,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 561,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 589,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 621,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 678,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 694,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 706,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 734,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 774,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 793,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 799,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/dashboard.py",
      "line_number": 820,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 26,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 32,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_database' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 32,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 89,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_routes' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 89,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 93,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 243,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_tenants' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 264,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_users' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 289,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_metrics' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 312,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 312,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/enterprise_demo.py",
      "line_number": 330,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 49,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 96,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 101,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_models' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 101,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_models' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 158,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 203,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 216,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 260,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_database' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 260,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 310,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_providers' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 310,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_providers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 400,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 405,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_routes' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 405,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 409,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'ai_dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 570,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_process' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 601,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_providers' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 615,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_models' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 620,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_stats' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 643,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 19,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 83,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 148,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 194,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 317,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 658,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/ai_integration.py",
      "line_number": 659,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 147,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 232,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 265,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 284,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_auth_tables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 366,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_auth_tables_sqlite' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 456,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_default_roles' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 517,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_user' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 556,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_store_user' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 597,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_user' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 670,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_user_by_email' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 701,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'authenticate_user' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 735,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'record_login_attempt' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 735,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'record_login_attempt' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 778,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_tokens' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 837,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_store_token' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 882,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'verify_token' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 926,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_api_key' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 991,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'verify_api_key' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1073,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_permission' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1086,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_user' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1134,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'require_auth' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1136,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'decorator' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1136,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'func' in function 'decorator' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1138,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'wrapper' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1168,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'require_permission' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'decorator' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'func' in function 'decorator' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1172,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'wrapper' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1190,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1193,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1194,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1203,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1213,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1216,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1224,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1227,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1231,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1234,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1238,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1241,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1244,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1245,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1248,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1257,
      "column": 28,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1260,
      "column": 28,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1264,
      "column": 32,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1266,
      "column": 32,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1268,
      "column": 28,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1270,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1272,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1274,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1276,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1278,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1281,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 275,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 257,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 282,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 364,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 454,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 515,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 524,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 549,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 553,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 595,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 667,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 698,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 716,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 721,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 728,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 732,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 776,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 834,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 880,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 923,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 984,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 988,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1070,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1083,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1131,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1162,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1184,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/tenant_auth.py",
      "line_number": 1282,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 20,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 40,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 53,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 74,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 90,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 103,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 107,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_service' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 127,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_service' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 147,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_service_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 158,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_service_worker' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 178,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 198,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 199,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 200,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 201,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 15,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 50,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 71,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 87,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 100,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 120,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 124,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 140,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 144,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_service_plugin.py",
      "line_number": 1,
      "column": 0,
      "issue_type": "logging",
      "severity": "medium",
      "title": "Missing Logging Import",
      "description": "File uses logging but doesn't import logging module",
      "suggestion": "Add: import logging",
      "code_snippet": "",
      "rule_id": "missing-logging-import"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 51,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 69,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_find_keepass_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 99,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_find_keepass_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 134,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 150,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 152,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 154,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 175,
      "column": 28,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 177,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 190,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'unlock_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 228,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_prompt_for_master_password' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 241,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_credentials' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 245,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_credential' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 275,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_from_browser_integration' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 290,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_from_pykeepass' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 301,
      "column": 16,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 323,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_from_cli' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 363,
      "column": 16,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 371,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_parse_cli_output' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 400,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_connection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 411,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'close' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 411,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'close' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 417,
      "column": 12,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 424,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__enter__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 427,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 427,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_type' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 427,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_val' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 427,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_tb' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 434,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 438,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_router_credentials' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 467,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'clear_cache' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 467,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'clear_cache' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 494,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_keepass_setup' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 496,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 497,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 508,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 509,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 510,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 511,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 517,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 519,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 521,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 523,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 524,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 525,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 526,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 527,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 231,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 67,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 137,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 163,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 169,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 184,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 197,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 225,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 238,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 271,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 280,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 287,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 319,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 357,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 367,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 397,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 408,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 464,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/keepass_helper.py",
      "line_number": 488,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 29,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'set_plugin_instance' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 29,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'plugin' in function 'set_plugin_instance' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 35,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 40,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 58,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_devices' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 75,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_guest_wifi_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 94,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_guest_wifi_toggle' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 115,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_roaming_events' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 134,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_sync' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 151,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'routers' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 156,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'devices' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 161,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'roaming' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 166,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'settings' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 571,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_web_interface' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 585,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 15,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 54,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 71,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 90,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 111,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 130,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_web.py",
      "line_number": 581,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 17,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 29,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 41,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_security' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 72,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_security_level' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 76,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'perform_security_scan' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 106,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_scan_results' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 110,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 50,
      "column": 17,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'eval(', 'exec(', '__import__',",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 50,
      "column": 26,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'eval(', 'exec(', '__import__',",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 69,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 93,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 97,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/security_scanner_plugin.py",
      "line_number": 1,
      "column": 0,
      "issue_type": "logging",
      "severity": "medium",
      "title": "Missing Logging Import",
      "description": "File uses logging but doesn't import logging module",
      "suggestion": "Add: import logging",
      "code_snippet": "",
      "rule_id": "missing-logging-import"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 49,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 82,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 127,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'execute' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 191,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 222,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 242,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 291,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_health_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 339,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 343,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_check_security_requirements' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 364,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_input' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 395,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_execute_main_logic' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 432,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_process_output' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 457,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_update_performance_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 480,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_save_performance_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 524,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 544,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 548,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 552,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 554,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 555,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 556,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 560,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 564,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 568,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 571,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 574,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 25,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 124,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 169,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 182,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 219,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 257,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 288,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 355,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 361,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 375,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 381,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 386,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 392,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 429,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 454,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 478,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 487,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 490,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/sample_secure_plugin.py",
      "line_number": 575,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 49,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 55,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'cls' in function 'from_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 75,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 79,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'add_signal_measurement' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 79,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_signal_measurement' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 87,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_average_signal_strength' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 93,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_signal_trend' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 116,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'close_session' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 116,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'close_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 122,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 149,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 153,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 160,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 182,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'load_history' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 182,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_history' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 207,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'save_history' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 207,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_history' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 229,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_device_locations' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 229,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_device_locations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 278,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_handle_device_connect' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 314,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_handle_device_disconnect' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 339,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_handle_roaming_event' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 386,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_determine_roaming_trigger' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 402,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_update_device_profile' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 438,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_update_statistics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 445,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_roaming_events' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 459,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_device_profile' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 465,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_active_sessions' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 469,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_router_statistics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 493,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_mobility_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 504,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'cleanup_old_data' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 504,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup_old_data' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 532,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 533,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 563,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 573,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 577,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 582,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 28,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 199,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 205,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 224,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 227,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 312,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 337,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 368,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/roaming_tracker.py",
      "line_number": 524,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 41,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 45,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 68,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 69,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 70,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 73,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 79,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 97,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 100,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 116,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 124,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 128,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 159,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 168,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 182,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 192,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 207,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 227,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 231,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 256,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 258,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 259,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 260,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 261,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 273,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 282,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 310,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 312,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 315,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 320,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 321,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 322,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 323,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 324,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 325,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 331,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 334,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 340,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_setup.py",
      "line_number": 342,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 18,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 24,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 36,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 49,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 65,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 77,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 90,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 94,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_security' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 124,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_security_level' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 128,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 147,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 148,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 149,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 150,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 46,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 62,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 74,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 87,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 105,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 121,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/example_security_plugin.py",
      "line_number": 1,
      "column": 0,
      "issue_type": "logging",
      "severity": "medium",
      "title": "Missing Logging Import",
      "description": "File uses logging but doesn't import logging module",
      "suggestion": "Add: import logging",
      "code_snippet": "",
      "rule_id": "missing-logging-import"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 122,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 126,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 168,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_device_info_from_oui' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 184,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'auto_detect_device_type' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 222,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'save_device_customization' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 222,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_device_customization' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 251,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_device_customization' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 284,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_enhanced_device_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 358,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 362,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 389,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'save_theme_settings' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 389,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_theme_settings' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 420,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_theme_settings' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 452,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'apply_theme_preset' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 452,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'apply_theme_preset' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 460,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_css_variables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 17,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 166,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 246,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 249,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 281,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 387,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 415,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_ux.py",
      "line_number": 449,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 61,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 63,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_service_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 65,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_service' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 67,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_service' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 71,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 71,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'name' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 71,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'version' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 71,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'description' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 71,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'author' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 71,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'category' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 71,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'dependencies' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 83,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 83,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'config' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 85,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_credentials' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 85,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_credentials' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 85,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'ref' in function 'get_credentials' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 89,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 89,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'helper' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 91,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_router_credentials' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 91,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_router_credentials' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 91,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'config' in function 'get_router_credentials' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 94,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_keepass_helper' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 94,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'config' in function 'create_keepass_helper' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 103,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 115,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 134,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 422,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_parse_soap_response' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 452,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 456,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_device_locations' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 456,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_device_locations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 488,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_roaming_events' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 493,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_device_current_router' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 501,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 510,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 521,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 538,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 555,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 585,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_prompt_for_credentials' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 590,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 610,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 623,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 643,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 781,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_service_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 791,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_service' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 795,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_service' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 801,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_plugin' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 809,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 810,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 828,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 831,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 836,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 839,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 842,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 845,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 848,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 850,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 852,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 588,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 156,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 172,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 178,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 181,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 185,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 254,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 258,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 292,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 319,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 334,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 364,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 389,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 393,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 415,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 444,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 478,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 578,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 582,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 607,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 620,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 633,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 664,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 675,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_plugin.py",
      "line_number": 693,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 118,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_sample_config' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 129,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 130,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 131,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 132,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 133,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 134,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 135,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 164,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 166,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 169,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 173,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 176,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_secure_environment' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 178,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 194,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 195,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 196,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 197,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_config_example.py",
      "line_number": 198,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/network_monitor_plugin.py",
      "line_number": 17,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/network_monitor_plugin.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/network_monitor_plugin.py",
      "line_number": 40,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_service' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/network_monitor_plugin.py",
      "line_number": 50,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_service' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/network_monitor_plugin.py",
      "line_number": 60,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_service_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/network_monitor_plugin.py",
      "line_number": 68,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_network_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/network_monitor_plugin.py",
      "line_number": 81,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/network_monitor_plugin.py",
      "line_number": 47,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/network_monitor_plugin.py",
      "line_number": 57,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/network_monitor_plugin.py",
      "line_number": 1,
      "column": 0,
      "issue_type": "logging",
      "severity": "medium",
      "title": "Missing Logging Import",
      "description": "File uses logging but doesn't import logging module",
      "suggestion": "Add: import logging",
      "code_snippet": "",
      "rule_id": "missing-logging-import"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 43,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 50,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_router_health' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 50,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_router_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 83,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_router_healthy' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 91,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_best_router' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 110,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 114,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'set_temporary_credential' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 114,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'set_temporary_credential' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 126,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_credentials' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 176,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 260,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'configure_resilience' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 266,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'with_retry' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 268,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'decorator' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 268,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'func' in function 'decorator' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 275,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'with_failover' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 277,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'decorator' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 277,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'func' in function 'decorator' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 212,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 81,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 124,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 137,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 169,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 215,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 231,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 237,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 240,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/fritzwatcher_resilience.py",
      "line_number": 245,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 51,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 90,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 97,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'cls' in function 'from_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 113,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 258,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_local_network_ranges' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 296,
      "column": 20,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 379,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 387,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'load_registry' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 387,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_registry' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 405,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'save_registry' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 405,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_registry' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 449,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_router' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 460,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'remove_router' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 473,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_router' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 477,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_all_routers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 481,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_online_routers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 522,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_primary_router' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 527,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_registry_stats' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 546,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 547,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 561,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 564,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 566,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 569,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 571,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 575,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 579,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 494,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 128,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 130,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 167,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 221,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 251,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 254,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 300,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 318,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 326,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 329,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 344,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 371,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 398,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 403,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 416,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 419,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 438,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 444,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 454,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 457,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 466,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/plugins/router_registry.py",
      "line_number": 470,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/main.py",
      "line_number": 4,
      "column": 16,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/run_all_tests.py",
      "line_number": 4,
      "column": 25,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/run_all_tests.py",
      "line_number": 32,
      "column": 37,
      "issue_type": "security",
      "severity": "high",
      "title": "Security Issue",
      "description": "shell=True can be vulnerable to injection attacks",
      "suggestion": "",
      "code_snippet": "result = subprocess.run(cmd, shell=True, capture_output=True, text=True, timeout=300)",
      "rule_id": "security-shellTrue"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/run_all_tests.py",
      "line_number": 24,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 140,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 161,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_black_frame' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_silence' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 193,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 431,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_room_connections' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 435,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_connection_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 451,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_on_connection_state_change' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 451,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'pc' in function '_on_connection_state_change' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 474,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_on_track' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 474,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'track' in function '_on_track' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 486,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_on_data_channel_message' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 497,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_start_recording' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 497,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'track' in function '_start_recording' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 521,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 758,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 947,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'on' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 962,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 965,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 966,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 969,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 970,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 974,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 975,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 979,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 987,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 991,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 995,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 997,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 1002,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 1005,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 57,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 172,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 185,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 250,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 254,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 301,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 336,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 363,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 393,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 424,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 428,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 469,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 472,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 477,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 484,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 489,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 495,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 511,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 514,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 538,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 545,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 553,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 559,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 561,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 594,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 597,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 632,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 637,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 663,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 689,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 715,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 735,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 744,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 783,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 804,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 829,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 856,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 867,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 876,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 889,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 891,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 894,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 923,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 934,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 945,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 960,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/webrtc/webrtc_system.py",
      "line_number": 1006,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 16,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 20,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_system_specs' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 20,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_specs' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 32,
      "column": 12,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 43,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 46,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'analyze_workspace' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 46,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_workspace' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 48,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 100,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_performance_benchmark' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 100,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_performance_benchmark' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 102,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 154,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'calculate_performance_score' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 154,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'calculate_performance_score' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 154,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'benchmarks' in function 'calculate_performance_score' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 177,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_performance_rating' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 177,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_performance_rating' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 177,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'score' in function 'get_performance_rating' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 188,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_optimization_recommendations' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 188,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_optimization_recommendations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 188,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'system_specs' in function 'generate_optimization_recommendations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 188,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'workspace_stats' in function 'generate_optimization_recommendations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 188,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'benchmark_results' in function 'generate_optimization_recommendations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 240,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'save_results' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 240,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_results' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 240,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'results' in function 'save_results' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 245,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 247,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 249,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_analysis' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 249,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_analysis' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 251,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 252,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 256,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 257,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 258,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 262,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 263,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 264,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 265,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 269,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 288,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 291,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 292,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 296,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 304,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 305,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/.devcontainer/container_performance_monitor.py",
      "line_number": 307,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 138,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 150,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 227,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_start_background_tasks' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 241,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'collect_metric' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 275,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_update_real_time_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 303,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_flush_metrics_loop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 312,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_flush_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 352,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_cleanup_real_time_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 375,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 452,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_real_time_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 479,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'track_event' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 523,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 534,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load_alerts' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 565,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_alert' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 621,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_alert_evaluation_loop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 630,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_evaluate_alerts' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 647,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_evaluate_condition' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 685,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_trigger_alert' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 717,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_send_notifications' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 736,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 744,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load_dashboards' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 774,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_dashboard' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 829,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_widget' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 877,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_chart' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 952,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_fallback_chart' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 997,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1007,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_start_system_monitoring' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1018,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_system_monitoring_loop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1030,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_collect_system_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1083,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_summary_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1109,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_system_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1142,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_recent_alerts' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1165,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_top_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1189,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1192,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1193,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1198,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1201,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1212,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1219,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1222,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1227,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1230,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1232,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1234,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1237,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1033,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 225,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 239,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 273,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 301,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 310,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 347,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 350,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 370,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 373,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 449,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 476,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 513,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 516,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 560,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 563,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 614,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 618,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 628,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 645,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 682,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 712,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 715,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 726,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 729,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 769,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 772,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 822,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 826,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 870,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 874,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 949,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 989,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1016,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1028,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1081,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1106,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1139,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1162,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1186,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/analytics/analytics_dashboard.py",
      "line_number": 1238,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 24,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_project_state' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 108,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_merge_plan' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 156,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_phase_lock_readme' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 225,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_pre_commit_hook' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 272,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_audit_1_script' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 326,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_project_safely' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 328,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 329,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 346,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 354,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 362,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 372,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 381,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 397,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 400,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 405,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 412,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 416,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'display_initialization_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 416,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'display_initialization_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 418,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 419,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 431,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 435,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 437,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 446,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 447,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 448,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 449,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 450,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 453,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 455,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/init_project_safely.py",
      "line_number": 457,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 23,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 54,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_project_state' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 63,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 66,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_unified_files' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 85,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'find_competing_implementations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 98,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_allowed_exception' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 109,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_directory_structure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 126,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_merge_plan_compliance' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 142,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_compliance_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_project_state' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_project_state' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 190,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 192,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'enforce_structure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 194,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 195,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 202,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 203,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 204,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 205,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 206,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 208,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 209,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 210,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 212,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 222,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 226,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 246,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 250,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/enforce_structure.py",
      "line_number": 228,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 28,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'verify_archive_integrity' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 30,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 31,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 36,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 46,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 50,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 58,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_archived_file_location' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 58,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'filename' in function 'get_archived_file_location' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 60,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 67,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 70,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 73,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'list_archived_files' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 73,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'category' in function 'list_archived_files' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 79,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 81,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 83,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 86,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 90,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 96,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 99,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 102,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_archive_report' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 104,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 105,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 106,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 107,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 112,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 127,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 128,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 129,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 130,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 131,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 133,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 136,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 137,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 138,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 139,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 142,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 144,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 154,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 172,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 173,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/verify_archive_linkage.py",
      "line_number": 17,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 57,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 63,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'should_ignore' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 70,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_legacy_pattern' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 91,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'scan_for_legacy_files' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 93,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 102,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 119,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 122,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 124,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 126,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 130,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_baseline' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 132,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 150,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 155,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 158,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_baseline' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 167,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log_alert' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log_alert' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 181,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 184,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 186,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_for_new_legacy' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 188,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 192,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 212,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 216,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'monitor_continuous' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 216,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'monitor_continuous' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 218,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 219,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 227,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 229,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 231,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 266,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 271,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 272,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 276,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 279,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 284,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 305,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 310,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 313,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 314,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/watch_legacy_reentry.py",
      "line_number": 161,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 23,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 33,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_json_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 42,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 45,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'save_json_file' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 45,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_json_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 52,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 54,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_ai_context' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 94,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_copilot_context' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 136,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_ai_memory' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 136,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_ai_memory' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_copilot_context' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_copilot_context' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 176,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_prompt_injection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 206,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'synchronize_all_agents' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 208,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 209,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 213,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 217,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 221,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 241,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 242,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 246,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_agent_sync' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 277,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'display_sync_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 277,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'display_sync_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 279,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 280,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 284,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 285,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 288,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 290,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 292,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 296,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 297,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 298,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 300,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 302,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 304,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 306,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 308,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 329,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 332,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/update_memory.py",
      "line_number": 310,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_awareness_validator.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_awareness_validator.py",
      "line_number": 107,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_system_resources' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_awareness_validator.py",
      "line_number": 128,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_docker_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_awareness_validator.py",
      "line_number": 160,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_file_structure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_awareness_validator.py",
      "line_number": 188,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_recommendations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_awareness_validator.py",
      "line_number": 275,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'display_results' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_awareness_validator.py",
      "line_number": 275,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'display_results' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_awareness_validator.py",
      "line_number": 131,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 16,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 21,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'check_docker_availability' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 21,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_docker_availability' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'check_wsl2_availability' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_wsl2_availability' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 46,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_remote_container' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 46,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_remote_container' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 48,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 51,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 52,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 55,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 62,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 64,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 72,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 74,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 78,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_wsl2_fallback' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 78,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_wsl2_fallback' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 80,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 83,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 84,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 87,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 92,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 93,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 97,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_multi_root_workspace' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 97,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_multi_root_workspace' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 99,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 103,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 104,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 121,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 125,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_performance_validation' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 125,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_performance_validation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 127,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 136,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 138,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 149,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 163,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 172,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'recommend_setup' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 172,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'recommend_setup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 172,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'performance_results' in function 'recommend_setup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 178,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 179,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 182,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 183,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 184,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 185,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 186,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 190,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 191,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 192,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 193,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 197,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 198,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 199,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 200,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 201,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 204,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_quick_start_script' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 204,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_quick_start_script' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 204,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'recommended_setup' in function 'create_quick_start_script' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 229,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 231,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_setup' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 231,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_setup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 233,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 234,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 250,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 251,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 252,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 253,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 269,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 273,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/setup_development_environment.py",
      "line_number": 274,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_operational_status.py",
      "line_number": 25,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_operational_status.py",
      "line_number": 88,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_operational_panel' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_operational_status.py",
      "line_number": 115,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_protocol_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_operational_status.py",
      "line_number": 142,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_deployment_commands' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_operational_status.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_test_strategy' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_operational_status.py",
      "line_number": 208,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'display_operational_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_operational_status.py",
      "line_number": 208,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'display_operational_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/msp_operational_status.py",
      "line_number": 244,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 24,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 112,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_project_state' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 121,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 124,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_default_state' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 134,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_current_phase' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 138,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_audit_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 142,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'can_proceed_to_phase' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 165,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_audit_phase' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 167,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 222,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_basic_validation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 260,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'find_competing_implementations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 278,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_audit_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 278,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_audit_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 321,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 323,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_audit_status_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 352,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'display_audit_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 352,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'display_audit_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 354,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 355,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 359,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 360,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 361,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 374,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 375,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 378,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 380,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 382,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 383,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 385,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 406,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 407,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 410,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 412,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/scripts/audit_system.py",
      "line_number": 387,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/init_noxvalidator_advanced.py",
      "line_number": 4,
      "column": 38,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/init_noxvalidator_advanced.py",
      "line_number": 1014,
      "column": 30,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "imp module is deprecated, use importlib",
      "suggestion": "Replace with: importlib",
      "code_snippet": "if any('blueprint' in imp.lower() for imp in all_imports):",
      "rule_id": "deprecated-imp-"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/init_noxvalidator_advanced.py",
      "line_number": 1017,
      "column": 26,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "imp module is deprecated, use importlib",
      "suggestion": "Replace with: importlib",
      "code_snippet": "if any('model' in imp.lower() for imp in all_imports):",
      "rule_id": "deprecated-imp-"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/init_noxvalidator_advanced.py",
      "line_number": 53,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 77,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 76",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 25,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 241,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 381,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 466,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 520,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 567,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 628,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 711,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 739,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 831,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 859,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 898,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 1025,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 1046,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_analytics_dashboard.py",
      "line_number": 1078,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_ai_orchestrator.py",
      "line_number": 72,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 71",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_ai_orchestrator.py",
      "line_number": 18,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_ai_orchestrator.py",
      "line_number": 347,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_ai_orchestrator.py",
      "line_number": 379,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_ai_orchestrator.py",
      "line_number": 392,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_ai_orchestrator.py",
      "line_number": 423,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_ai_orchestrator.py",
      "line_number": 487,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_ai_orchestrator.py",
      "line_number": 490,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 1444,
      "column": 19,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 1300,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 234,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 238,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 241,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 287,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 297,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 316,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 339,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 360,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/nox_bootstrap.py",
      "line_number": 372,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 5,
      "column": 37,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 40,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 210,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 231,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 234,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 275,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 354,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 412,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 458,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 511,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 549,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 584,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 620,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 764,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 806,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 824,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 835,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 841,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 846,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 849,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 852,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 902,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/advanced_security_monitor.py",
      "line_number": 907,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/start_consolidated_web.py",
      "line_number": 17,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/start_consolidated_web.py",
      "line_number": 31,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/start_consolidated_web.py",
      "line_number": 32,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/start_consolidated_web.py",
      "line_number": 33,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/start_consolidated_web.py",
      "line_number": 34,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/start_consolidated_web.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/start_consolidated_web.py",
      "line_number": 47,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 89,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_connection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 102,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'refresh_available_models' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 120,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_best_model_for_task' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 144,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_system_prompt' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 228,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'query_model' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 304,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'format_ai_response' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 324,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'fallback_response' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 406,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_model_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 430,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_model' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 467,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 469,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 470,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 475,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 478,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 483,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 487,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 492,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 494,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 495,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 498,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 500,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 22,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 99,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 113,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 116,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 273,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 289,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 294,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/llm_wrapper.py",
      "line_number": 300,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 40,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 66,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_tts_engine' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 66,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_tts_engine' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 95,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_recognition_settings' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 95,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_recognition_settings' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 114,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'speak' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 114,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'speak' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 139,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'clean_text_for_speech' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 186,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'listen_once' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 229,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'detect_wake_word' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 249,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'continuous_listen' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 249,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'continuous_listen' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 285,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'start_listening' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 285,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_listening' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 306,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'stop_listening' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 306,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_listening' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 315,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'interactive_session' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 315,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'interactive_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 367,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'extract_speech_summary' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 410,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 413,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 414,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 417,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 418,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 425,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 429,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 432,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 443,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 446,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 150,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 92,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 112,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 132,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 137,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 208,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 216,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 226,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 245,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 273,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 282,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 358,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/voice_interface.py",
      "line_number": 364,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 32,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 57,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 83,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 95,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_task_registry' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 133,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_voice_engine' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 133,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_voice_engine' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 159,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_ollama_connection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'speak' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'speak' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 190,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'listen_for_voice_command' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 208,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 214,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 217,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 220,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 227,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'process_with_ai' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 282,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'process_with_rules' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 303,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'execute_task' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 338,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_diagnostics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 373,
      "column": 12,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 388,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_network_scan' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 417,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_security_analysis' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 447,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_performance_analysis' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 491,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_help_response' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 518,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_task_list' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 525,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log_action' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 525,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log_action' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 539,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'process_command' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 573,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 587,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 588,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 591,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 592,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 610,
      "column": 28,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 615,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 619,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 620,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 626,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 631,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 634,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 641,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 646,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 647,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 648,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 650,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 651,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 575,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 156,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 168,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 171,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 188,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 224,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 277,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 335,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/nox_assistant/assistant.py",
      "line_number": 537,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 122,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 152,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_middleware' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 169,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 403,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_update_model_stats' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 449,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 144,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 248,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 286,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 297,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 349,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 383,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/index.py",
      "line_number": 386,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 5,
      "column": 29,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 241,
      "column": 17,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'eval(',",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 242,
      "column": 17,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'exec('",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 537,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 74,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 80,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 124,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 146,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 156,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 164,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 170,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 174,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 178,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 181,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 194,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 204,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 213,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 217,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 228,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 247,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 253,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 262,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 268,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 271,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 275,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 286,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 300,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 304,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 324,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 343,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 346,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 355,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 389,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 393,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 416,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 420,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 436,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 440,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 471,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 473,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 475,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 498,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 502,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 520,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_git_plugin_system.py",
      "line_number": 523,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 4,
      "column": 25,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 66,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 88,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 114,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 123,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 129,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 141,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 145,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 160,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 163,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 167,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 179,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_loader.py",
      "line_number": 326,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 29,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 43,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 44,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 45,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 46,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 48,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_security_infrastructure' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 48,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_security_infrastructure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 61,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'init_validation_database' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 61,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'init_validation_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 92,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'calculate_plugin_hash' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 105,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'verify_plugin_signature' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 133,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'assess_plugin_risk' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 195,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'quarantine_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 208,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 213,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 276,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'record_validation' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 276,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'record_validation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 293,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'add_trusted_signature' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 293,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_trusted_signature' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 309,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log_security_event' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 309,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log_security_event' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 318,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 320,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_validation_summary' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 354,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_workspace_plugins' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 356,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 380,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 396,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 409,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 410,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 411,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 413,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 414,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 415,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 417,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 419,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 421,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 422,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 423,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 425,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 426,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 429,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 432,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 434,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 435,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 436,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 437,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 440,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 145,
      "column": 49,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'os.system', 'subprocess.call', 'eval(', 'exec(',",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 145,
      "column": 58,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'os.system', 'subprocess.call', 'eval(', 'exec(',",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 145,
      "column": 30,
      "issue_type": "security",
      "severity": "medium",
      "title": "Security Issue",
      "description": "Use subprocess.run() instead for better security",
      "suggestion": "",
      "code_snippet": "'os.system', 'subprocess.call', 'eval(', 'exec(',",
      "rule_id": "security-subprocess-call"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 155,
      "column": 31,
      "issue_type": "security",
      "severity": "high",
      "title": "Security Issue",
      "description": "pickle.load can execute arbitrary code from untrusted data",
      "suggestion": "",
      "code_snippet": "'json.loads', 'pickle.loads', 'yaml.load'",
      "rule_id": "security-pickle-load"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_validator.py",
      "line_number": 155,
      "column": 47,
      "issue_type": "security",
      "severity": "high",
      "title": "Security Issue",
      "description": "Use yaml.safe_load() instead to prevent code execution",
      "suggestion": "",
      "code_snippet": "'json.loads', 'pickle.loads', 'yaml.load'",
      "rule_id": "security-yaml-load"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 4,
      "column": 25,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 38,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 122,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 157,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 171,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 192,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 225,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 247,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 256,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 260,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 280,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 283,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 286,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 289,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 315,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_system.py",
      "line_number": 358,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 5,
      "column": 28,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 241,
      "column": 31,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'__import__', 'eval(', 'exec(', 'compile(',",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 241,
      "column": 40,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'__import__', 'eval(', 'exec(', 'compile(',",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 471,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 125,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 129,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 138,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 142,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 173,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 182,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 209,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 247,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 253,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 292,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 311,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 313,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 321,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 325,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 334,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 344,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 365,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 369,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 376,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 384,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 388,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 406,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 462,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 467,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 477,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 481,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 490,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 584,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_framework.py",
      "line_number": 588,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 4,
      "column": 26,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 35,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 157,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 220,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 222,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 267,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 268,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 288,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 313,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 373,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 380,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 386,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 406,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 410,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 411,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 425,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_sandbox.py",
      "line_number": 429,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_routes.py",
      "line_number": 4,
      "column": 25,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_routes.py",
      "line_number": 23,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_routes.py",
      "line_number": 44,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_routes.py",
      "line_number": 59,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_routes.py",
      "line_number": 68,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_routes.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 4,
      "column": 31,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 222,
      "column": 17,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'exec(',",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 223,
      "column": 17,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'eval(',",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 828,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 172,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 183,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 198,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 208,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 232,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 237,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 256,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 272,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 276,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 280,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 359,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 379,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 390,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 393,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 404,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 409,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 421,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 426,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 431,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 447,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 462,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 466,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 473,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 493,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 497,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 504,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 509,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 516,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 520,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 524,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 531,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 536,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 543,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 547,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 551,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 559,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 564,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_architecture.py",
      "line_number": 607,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_sample_plugin.py",
      "line_number": 34,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108___init__.py",
      "line_number": 25,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 24",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 4,
      "column": 34,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 543,
      "column": 13,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'exec(',",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 544,
      "column": 13,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'eval(',",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 42,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 233,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 244,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 246,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 254,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 258,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 264,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 269,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 297,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 322,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 326,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 354,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 413,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 417,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 437,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 440,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 463,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 493,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 530,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 558,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 561,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 573,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 588,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 614,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_enhanced_plugin_system.py",
      "line_number": 632,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 16,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 15",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 60,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 75,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 81,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 91,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 116,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 129,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 151,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 214,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 220,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 230,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 232,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 243,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 247,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 257,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 264,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 270,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugins.py",
      "line_number": 301,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin.py",
      "line_number": 4,
      "column": 18,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/security/quarantine/quarantined_20250718_120108_plugin_marketplace.py",
      "line_number": 21,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 20",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/deploy.py",
      "line_number": 25,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/deploy.py",
      "line_number": 138,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 32,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 42,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_service_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 52,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_default_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 68,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_service_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 99,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_health_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 139,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 171,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_supported_protocols' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 191,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_model_registry' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 237,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_test_requests' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 284,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'register_with_enterprise_services' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 302,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_integration_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 376,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 377,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 384,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 385,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 386,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 387,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 391,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 392,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 396,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 397,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 398,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 402,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 403,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 407,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 411,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 413,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 15,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 40,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 229,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/service_integration.py",
      "line_number": 299,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/monitor.py",
      "line_number": 29,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/monitor.py",
      "line_number": 81,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/monitor.py",
      "line_number": 93,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_health_panel' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/monitor.py",
      "line_number": 134,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_metrics_panel' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/monitor.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_system_panel' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/monitor.py",
      "line_number": 219,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_models_panel' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/monitor.py",
      "line_number": 249,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_recent_activity_panel' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/monitor.py",
      "line_number": 274,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_performance_chart' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/monitor.py",
      "line_number": 304,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_dashboard_layout' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/monitor.py",
      "line_number": 428,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/api_endpoints.py",
      "line_number": 331,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 33,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_healthy' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 48,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_load_factor' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 52,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_metrics' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 52,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 68,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 83,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_endpoints' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 83,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_endpoints' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 102,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_routing_rules' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 102,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_routing_rules' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_default_routing_rule' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 222,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_fallback_endpoints' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 230,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'select_least_loaded_endpoint' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 237,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'select_highest_health_endpoint' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 440,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_routing_stats' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 475,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 476,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 477,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 478,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 479,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 15,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 100,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 154,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 340,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 428,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/router.py",
      "line_number": 1,
      "column": 0,
      "issue_type": "logging",
      "severity": "medium",
      "title": "Missing Logging Import",
      "description": "File uses logging but doesn't import logging module",
      "suggestion": "Add: import logging",
      "code_snippet": "",
      "rule_id": "missing-logging-import"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 83,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 92,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_request_id' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 97,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'calculate_compatibility' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 134,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 146,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 158,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 182,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_protocols' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 182,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_protocols' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 241,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 254,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_protocol_schema' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 283,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'calculate_complexity' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 296,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'determine_context_requirements' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 326,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'suggest_models' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 342,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'calculate_priority' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 449,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'determine_processing_strategy' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 461,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'calculate_context_window' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 477,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'estimate_cost' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 492,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'estimate_processing_time' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 503,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_optimization_suggestions' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 528,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_health_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 540,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_memory_usage' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 569,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 570,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 571,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 572,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 573,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 574,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 34,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 178,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 206,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/index.py",
      "line_number": 526,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 76,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 83,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'add_capability' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 83,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_capability' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 87,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'add_method' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 87,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_method' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 91,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_message' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 97,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_schema_definition' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 119,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 126,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_capabilities' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 126,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_capabilities' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 155,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_methods' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 155,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_methods' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 197,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_message_formats' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 197,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_message_formats' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 218,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_validation_rules' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 218,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_validation_rules' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 231,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 238,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_capabilities' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 238,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_capabilities' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 274,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_methods' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 274,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_methods' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 333,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_message_formats' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 333,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_message_formats' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 365,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_validation_rules' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 365,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_validation_rules' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 379,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 386,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_capabilities' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 386,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_capabilities' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 429,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_methods' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 429,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_methods' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 510,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_message_formats' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 510,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_message_formats' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 547,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_validation_rules' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 547,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_validation_rules' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 564,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 568,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_protocols' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 568,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_protocols' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 576,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_protocol' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 580,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_latest_protocol' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 584,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_supported_versions' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 588,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_message' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 598,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_capabilities' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 613,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'export_schemas' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 613,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'export_schemas' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 630,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 631,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 636,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 637,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 638,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 639,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 643,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 645,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 646,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/enterprise/context/protocols/schema.py",
      "line_number": 13,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 84,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1084,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 67,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 167,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 177,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 248,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 261,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 318,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 392,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 460,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 510,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 531,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 547,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 599,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 684,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 760,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 813,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 852,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 894,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 918,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 939,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 976,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1006,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1045,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1074,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1111,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1116,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1131,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1146,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1148,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1149,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/webpanel/app.py",
      "line_number": 1150,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 14,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 13",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 6,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 144,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 225,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 257,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 260,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 274,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 292,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 311,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 314,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/database.py",
      "line_number": 323,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/auth.py",
      "line_number": 15,
      "column": 21,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/runner.py",
      "line_number": 7,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_script' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/runner.py",
      "line_number": 7,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'script_path' in function 'run_script' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/runner.py",
      "line_number": 7,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'args' in function 'run_script' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/runner.py",
      "line_number": 40,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/runner.py",
      "line_number": 44,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/runner.py",
      "line_number": 47,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/auto_test_runner.py",
      "line_number": 5,
      "column": 28,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/auto_test_runner.py",
      "line_number": 609,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/auto_test_runner.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/auto_test_runner.py",
      "line_number": 163,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/auto_test_runner.py",
      "line_number": 167,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/auto_test_runner.py",
      "line_number": 565,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/auto_test_runner.py",
      "line_number": 601,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 12,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 26,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 29,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 32,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 34,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 47,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/example_script.py",
      "line_number": 50,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 24,
      "column": 21,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 91,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 94,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 98,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 131,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 135,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 161,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 165,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/final_validation.py",
      "line_number": 172,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 27,
      "column": 21,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 194,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 96,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 132,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 155,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 172,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 176,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 183,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 201,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 204,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/system_status_check.py",
      "line_number": 208,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 26,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 25",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 562,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 112,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 128,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 252,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 272,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 281,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 291,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 306,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 313,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 359,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 398,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 402,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/phase2_initiate.py",
      "line_number": 545,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/bootstrap.py",
      "line_number": 29,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 28",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/bootstrap.py",
      "line_number": 474,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/bootstrap.py",
      "line_number": 130,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/bootstrap.py",
      "line_number": 132,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/bootstrap.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/bootstrap.py",
      "line_number": 403,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/bootstrap.py",
      "line_number": 404,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/bootstrap.py",
      "line_number": 405,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/bootstrap.py",
      "line_number": 425,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/bootstrap.py",
      "line_number": 430,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/prepare_phase2.py",
      "line_number": 25,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 24",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/prepare_phase2.py",
      "line_number": 417,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/prepare_phase2.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/prepare_phase2.py",
      "line_number": 149,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/prepare_phase2.py",
      "line_number": 225,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/prepare_phase2.py",
      "line_number": 400,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/healthcheck.py",
      "line_number": 27,
      "column": 21,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/healthcheck.py",
      "line_number": 12,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/fix_python_test.py",
      "line_number": 5,
      "column": 27,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/fix_python_test.py",
      "line_number": 40,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/critical_fix.py",
      "line_number": 30,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/critical_fix.py",
      "line_number": 102,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/critical_fix.py",
      "line_number": 145,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/critical_fix.py",
      "line_number": 167,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/critical_fix.py",
      "line_number": 173,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/autoimport.py",
      "line_number": 35,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 34",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/scripts/autoimport.py",
      "line_number": 18,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 16,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 15",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 122,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 167,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 172,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 236,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 246,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 249,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 275,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 313,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 317,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 324,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 333,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 351,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 358,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 363,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/speech_engine.py",
      "line_number": 404,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 17,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 16",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 448,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 181,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 331,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 346,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 353,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 404,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 408,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 470,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 517,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/tts_engine.py",
      "line_number": 539,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/wake_word_detector.py",
      "line_number": 15,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 14",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/wake_word_detector.py",
      "line_number": 160,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/wake_word_detector.py",
      "line_number": 164,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/wake_word_detector.py",
      "line_number": 171,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/voice/wake_word_detector.py",
      "line_number": 200,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/security/auth_manager.py",
      "line_number": 18,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 17",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/security/auth_manager.py",
      "line_number": 319,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 16,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 15",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 156,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 189,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 209,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 219,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 221,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 228,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 235,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 243,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 251,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 276,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/tasks/manager.py",
      "line_number": 282,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/utils/password_utils.py",
      "line_number": 10,
      "column": 21,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/task_registry.py",
      "line_number": 15,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 14",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/task_registry.py",
      "line_number": 68,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/task_registry.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/task_registry.py",
      "line_number": 279,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/task_registry.py",
      "line_number": 293,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/task_registry.py",
      "line_number": 317,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/task_registry.py",
      "line_number": 320,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/task_registry.py",
      "line_number": 331,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/task_registry.py",
      "line_number": 335,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/task_registry.py",
      "line_number": 351,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/ollama_client.py",
      "line_number": 15,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 14",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/ollama_client.py",
      "line_number": 85,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/ollama_client.py",
      "line_number": 98,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/ollama_client.py",
      "line_number": 104,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/ollama_client.py",
      "line_number": 131,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/ollama_client.py",
      "line_number": 138,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/ollama_client.py",
      "line_number": 235,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/ollama_client.py",
      "line_number": 267,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/ollama_client.py",
      "line_number": 286,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/ollama_client.py",
      "line_number": 343,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/nox_assistant.py",
      "line_number": 16,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 15",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/nox_assistant.py",
      "line_number": 313,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/ai/nox_assistant.py",
      "line_number": 423,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/websocket/manager.py",
      "line_number": 17,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 16",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/websocket/manager.py",
      "line_number": 9,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/NoxPanel/noxcore/websocket/manager.py",
      "line_number": 176,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/manager_ultimate.py",
      "line_number": 49,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 48",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/manager_ultimate.py",
      "line_number": 41,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/manager_ultimate.py",
      "line_number": 208,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/core_ultimate.py",
      "line_number": 37,
      "column": 16,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/core_ultimate.py",
      "line_number": 121,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/core_ultimate.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/main_ultimate.py",
      "line_number": 67,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/main_ultimate.py",
      "line_number": 85,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_stream' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/main_ultimate.py",
      "line_number": 99,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/main_ultimate.py",
      "line_number": 115,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'parse' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/main_ultimate.py",
      "line_number": 121,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'set_as_environment_variables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/main_ultimate.py",
      "line_number": 136,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 97,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'cls' in function '_urlnorm' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 117,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'cls' in function 'cache_url' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 120,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'parse_cache_control' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 174,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load_from_cache' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 200,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cached_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 310,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'conditional_headers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 325,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_cache_set' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 355,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cache_response' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 492,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_cached_response' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 46,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/controller_ultimate.py",
      "line_number": 439,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 46,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 46,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'method' in function 'request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 46,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 94,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 94,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'get' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 94,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'params' in function 'get' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 108,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'options' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 108,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'options' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 120,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'head' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 120,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'head' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 135,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'post' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 135,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'post' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 135,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'data' in function 'post' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 135,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'json' in function 'post' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 150,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'put' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 150,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'put' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 150,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'data' in function 'put' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 165,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'patch' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 165,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'patch' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 165,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'data' in function 'patch' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 180,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'delete' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase5/ultimate_optimization/api_ultimate.py",
      "line_number": 180,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'delete' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/main_optimized.py",
      "line_number": 58,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/main_optimized.py",
      "line_number": 76,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_stream' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/main_optimized.py",
      "line_number": 90,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/main_optimized.py",
      "line_number": 106,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'parse' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/main_optimized.py",
      "line_number": 112,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'set_as_environment_variables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/main_optimized.py",
      "line_number": 127,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 96,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'register_algorithm' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 110,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'unregister_algorithm' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 125,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_algorithms' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 132,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_algorithm_by_name' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 150,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'encode' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 228,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'decode_complete' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 275,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'decode' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 298,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_unverified_header' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 310,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 351,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_verify_signature' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 383,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_headers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 388,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_kid' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jws_optimized.py",
      "line_number": 43,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwk_optimized.py",
      "line_number": 58,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwk_optimized.py",
      "line_number": 130,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'key_type' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwk_optimized.py",
      "line_number": 135,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'key_id' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwk_optimized.py",
      "line_number": 140,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'public_key_use' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwk_optimized.py",
      "line_number": 147,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwk_optimized.py",
      "line_number": 184,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__getitem__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwk_optimized.py",
      "line_number": 194,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwk_optimized.py",
      "line_number": 199,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_jwk_set' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwk_optimized.py",
      "line_number": 203,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_timestamp' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwk_optimized.py",
      "line_number": 42,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 37,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 37,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'method' in function 'request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 37,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 85,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 85,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'get' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 85,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'params' in function 'get' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 99,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'options' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 99,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'options' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 111,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'head' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 111,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'head' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 126,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'post' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 126,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'post' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 126,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'data' in function 'post' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 126,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'json' in function 'post' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 141,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'put' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 141,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'put' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 141,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'data' in function 'put' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 156,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'patch' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 156,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'patch' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 156,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'data' in function 'patch' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 171,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'delete' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_optimized.py",
      "line_number": 171,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'delete' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/core_optimized.py",
      "line_number": 110,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 69,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 90,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'encode' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 129,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_encode_payload' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 148,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'decode_complete' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 223,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_decode_payload' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 240,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'decode' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 282,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_claims' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 282,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'audience' in function '_validate_claims' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 282,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'issuer' in function '_validate_claims' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 325,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_required_claims' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 335,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_sub' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 335,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'subject' in function '_validate_sub' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 355,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_jti' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 370,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_iat' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 386,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_nbf' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 401,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_exp' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 418,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_aud' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 469,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_iss' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/api_jwt_optimized.py",
      "line_number": 42,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 75,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 88,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'cls' in function '_urlnorm' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 108,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'cls' in function 'cache_url' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 111,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'parse_cache_control' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 165,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load_from_cache' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 191,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cached_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 301,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'conditional_headers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 316,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_cache_set' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 346,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cache_response' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 483,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_cached_response' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 37,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/rlvr/phase4/optimization_results/controller_optimized.py",
      "line_number": 430,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 15,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 15,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'workspace_path' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'analyze_file_structure' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_file_structure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 29,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 91,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'analyze_docker_configuration' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 91,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_docker_configuration' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 93,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 115,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'analyze_vscode_configuration' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 115,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_vscode_configuration' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 117,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 156,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'analyze_system_resources' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 156,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_system_resources' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 158,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 188,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 190,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_recommendations' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 190,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_recommendations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 192,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 205,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_diagnostic' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 205,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_diagnostic' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 207,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 217,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'save_report' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 217,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 217,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'output_path' in function 'save_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 225,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 227,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 235,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 236,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 237,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 239,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 240,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 241,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 242,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 245,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 248,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 249,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 251,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/scripts/performance_diagnostic.py",
      "line_number": 12,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 59,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 76,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 82,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_logger' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 110,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'pre_execute' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 121,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'post_execute' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 149,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'handle_error' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 201,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 239,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 274,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 295,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 304,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'set_validation_rules' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 304,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'set_validation_rules' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 351,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 402,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 441,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 450,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'set_config' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 450,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'set_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 503,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 506,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'register' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 506,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'register' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 511,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 515,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'list_plugins' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 519,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_by_category' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 529,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'register_plugin' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 546,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 547,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 548,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 549,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 553,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 561,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 562,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 585,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 594,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 597,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 600,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 603,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 606,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 609,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 614,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 617,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 618,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 118,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 134,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/docs/enhanced-sandbox/plugin-template/sandbox_plugin_template.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/fix_logging.py",
      "line_number": 9,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'fix_unicode_in_file' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/fix_logging.py",
      "line_number": 9,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'file_path' in function 'fix_unicode_in_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/fix_logging.py",
      "line_number": 24,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/fix_logging.py",
      "line_number": 59,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/fix_logging.py",
      "line_number": 78,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/debug_routes.py",
      "line_number": 4,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_routes' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/debug_routes.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/debug_routes.py",
      "line_number": 42,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/debug_routes.py",
      "line_number": 44,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/debug_routes.py",
      "line_number": 46,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/debug_routes.py",
      "line_number": 50,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/debug_routes.py",
      "line_number": 52,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/debug_routes.py",
      "line_number": 54,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 61,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 86,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'init_logging' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 86,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'init_logging' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 110,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'write_diagnostics_log' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 110,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'write_diagnostics_log' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 118,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'write_agent_log' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 118,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'write_agent_log' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 224,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'determine_severity' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 233,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_auto_fixable' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 252,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_fix_priority' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 261,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'assess_risk_level' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 273,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'estimate_fix_time' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 286,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'identify_dependencies' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 21,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 88,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 116,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 140,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 210,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 317,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 331,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 353,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 366,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 374,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 402,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 408,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 414,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 420,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 426,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 537,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 585,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostic_system.py",
      "line_number": 600,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 60,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 102,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 103,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 104,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 105,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 160,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 161,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 162,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 163,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 263,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 264,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 265,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 266,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 267,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 278,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 304,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 305,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 306,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 307,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 325,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 346,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 347,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 348,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 349,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 367,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 385,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 386,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 387,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 388,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 389,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 401,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 415,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 416,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 417,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 450,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 459,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 460,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 461,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 462,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 495,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 500,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 501,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 502,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 503,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 550,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 558,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 559,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 560,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 561,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 607,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 611,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 612,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 613,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 614,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 684,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 719,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase4.py",
      "line_number": 724,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 85,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 103,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 737,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'extract_error_features' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 752,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_category_weight' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 768,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_severity_weight' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 779,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'determine_fix_complexity' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 802,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_fix_strategy' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 830,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'calculate_gate7_impact' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 863,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'calculate_rlvr_impact' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 887,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_auto_fixable' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 909,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'estimate_effort' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 919,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'identify_dependencies' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 934,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_error_id' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 954,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'calculate_priority_score' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1032,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_syntax_fix' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1048,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_import_fix' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1060,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_type_fix' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1075,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_documentation_fix' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1093,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_performance_fix' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1362,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1363,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1364,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1365,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 454,
      "column": 35,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "(r'eval\\s*\\(', \"Use of eval() function\"),",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 455,
      "column": 35,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "(r'exec\\s*\\(', \"Use of exec() function\"),",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 31,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 215,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 216,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 217,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 263,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 292,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 296,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 328,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 363,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 403,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 444,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 485,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 526,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 567,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 608,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 649,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 690,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 734,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 951,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 992,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1029,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1124,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1126,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1146,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1184,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1266,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1290,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1291,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1339,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1352,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase3.py",
      "line_number": 1360,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 103,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 104,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 105,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 106,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 157,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 158,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 160,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 195,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 201,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 202,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 204,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 245,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 251,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 252,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 253,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 254,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 295,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 301,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 302,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 303,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 304,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 345,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 351,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 352,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 353,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 354,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 396,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 402,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 403,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 404,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 405,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 456,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 466,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 467,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 468,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 469,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 515,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 520,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 521,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 522,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 523,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 562,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 564,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 565,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 566,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 567,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 655,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 696,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase5.py",
      "line_number": 701,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 32,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 31",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 496,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 144,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 211,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 242,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 306,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 326,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 340,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 347,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 375,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 408,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 684,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 693,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 694,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 695,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 700,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 705,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 710,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/diagnostic_repair.py",
      "line_number": 728,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 55,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 153,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_sample_file_path' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 168,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_severity_by_category' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 182,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_error_message' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 196,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'estimate_fix_effort' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 210,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_dependencies' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 224,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_fix_strategy' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 352,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_next_actions' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 331,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 83,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 149,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 263,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 269,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 282,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 285,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 289,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 308,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 378,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 399,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 491,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 667,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 686,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 703,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 704,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 709,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/copilot_agent_diagnostics_phase2.py",
      "line_number": 730,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/git_template_integrator.py",
      "line_number": 28,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 27",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/git_template_integrator.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/git_template_integrator.py",
      "line_number": 232,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/git_template_integrator.py",
      "line_number": 704,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 12,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 26,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 29,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 30,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 33,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 34,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 36,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 41,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 42,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 43,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 45,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 49,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 50,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 51,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 52,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 53,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 54,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 57,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 61,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 62,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 63,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 64,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 65,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 67,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 68,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 73,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 74,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 77,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 79,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 80,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 81,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 83,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/scripts/system_diagnostic.py",
      "line_number": 85,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/plugin_sdk/templates/python_plugin_template.py",
      "line_number": 18,
      "column": 7,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/plugin_sdk/templates/python_plugin_template.py",
      "line_number": 43,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/plugin_sdk/templates/python_plugin_template.py",
      "line_number": 48,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/plugin_sdk/templates/python_plugin_template.py",
      "line_number": 59,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/plugin_sdk/templates/python_plugin_template.py",
      "line_number": 69,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/plugin_sdk/templates/python_plugin_template.py",
      "line_number": 85,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/plugin_sdk/templates/python_plugin_template.py",
      "line_number": 105,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/plugin_sdk/templates/python_plugin_template.py",
      "line_number": 115,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/backup_20250720_012355/AI/NoxPanel/plugin_sdk/templates/python_plugin_template.py",
      "line_number": 126,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/webhooks/rlvr_guardian_webhook.py",
      "line_number": 13,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/webhooks/rlvr_guardian_webhook.py",
      "line_number": 16,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'send_compliance_alert' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/webhooks/rlvr_guardian_webhook.py",
      "line_number": 16,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'send_compliance_alert' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/webhooks/rlvr_guardian_webhook.py",
      "line_number": 16,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'compliance_data' in function 'send_compliance_alert' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/webhooks/rlvr_guardian_webhook.py",
      "line_number": 23,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/webhooks/rlvr_guardian_webhook.py",
      "line_number": 26,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'send_performance_alert' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/webhooks/rlvr_guardian_webhook.py",
      "line_number": 26,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'send_performance_alert' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/webhooks/rlvr_guardian_webhook.py",
      "line_number": 26,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'performance_data' in function 'send_performance_alert' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/webhooks/rlvr_guardian_webhook.py",
      "line_number": 33,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/ai-accelerator/ai-accelerator.py",
      "line_number": 20,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/ai-accelerator/ai-accelerator.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'execute' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/ai-accelerator/ai-accelerator.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'execute' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/ai-accelerator/ai-accelerator.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'validate' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/ai-accelerator/ai-accelerator.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/ai-accelerator/ai-accelerator.py",
      "line_number": 41,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_signature' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/ai-accelerator/ai-accelerator.py",
      "line_number": 41,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_signature' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/ai-accelerator/ai-accelerator.py",
      "line_number": 50,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/ai-accelerator/ai-accelerator.py",
      "line_number": 43,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/performance-monitor/performance-monitor.py",
      "line_number": 20,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/performance-monitor/performance-monitor.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'execute' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/performance-monitor/performance-monitor.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'execute' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/performance-monitor/performance-monitor.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'validate' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/performance-monitor/performance-monitor.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/performance-monitor/performance-monitor.py",
      "line_number": 41,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_signature' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/performance-monitor/performance-monitor.py",
      "line_number": 41,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_signature' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/performance-monitor/performance-monitor.py",
      "line_number": 50,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/v52_enhancement/plugins/forecasting/performance-monitor/performance-monitor.py",
      "line_number": 43,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/integration/ai_bridge/rlvr_noxpanel_ai_bridge.py",
      "line_number": 16,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/integration/ai_bridge/rlvr_noxpanel_ai_bridge.py",
      "line_number": 23,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_infrastructure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/integration/ai_bridge/rlvr_noxpanel_ai_bridge.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_recommendations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/integration/ai_bridge/rlvr_noxpanel_ai_bridge.py",
      "line_number": 51,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 64,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 81,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 116,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 173,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 230,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 289,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 330,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 382,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 410,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 442,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_routes.py",
      "line_number": 474,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 5,
      "column": 34,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 449,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 111,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 112,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 131,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 136,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 170,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 194,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 198,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 199,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 200,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 259,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 261,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 267,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 270,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 273,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 282,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 283,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 284,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 289,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 291,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 295,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 296,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 297,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 298,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 301,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 302,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 303,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 306,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 307,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 308,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 345,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 350,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 356,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 371,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 376,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 380,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 399,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 427,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/comprehensive_launcher.py",
      "line_number": 488,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 53,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 54,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 55,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 149,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__repr__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 153,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'validate_email' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 153,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_email' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 153,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'key' in function 'validate_email' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 153,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'address' in function 'validate_email' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 159,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'set_password' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 159,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'set_password' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 164,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_password' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 169,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 204,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__repr__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 207,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 246,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__repr__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 249,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_expired' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 253,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_valid' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 257,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'refresh' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 257,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'refresh' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 262,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 309,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__repr__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 312,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 365,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__repr__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 368,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 452,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__repr__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 455,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_active' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 459,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'calculate_file_hash' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 470,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_file_info' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 470,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_file_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 477,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 543,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__repr__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 546,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 596,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__repr__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 599,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 617,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 626,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_engine' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 649,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_session_factory' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 661,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_tables' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 661,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_tables' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 675,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_insert_default_data' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 743,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 747,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'close_session' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 747,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'close_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 751,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'cleanup_old_data' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 751,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup_old_data' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 789,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_stats' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 838,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'close' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 838,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'close' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 848,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'set_sqlite_pragma' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 848,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'dbapi_connection' in function 'set_sqlite_pragma' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 848,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'connection_record' in function 'set_sqlite_pragma' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 882,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 883,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 885,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 49,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 646,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 658,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 672,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 738,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 779,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 784,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/models_unified.py",
      "line_number": 833,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 22,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'print_banner' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 33,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 43,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 47,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 50,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 53,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 54,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 55,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 59,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 60,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 61,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 63,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 66,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 69,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 72,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 80,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 81,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 82,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 83,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 85,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 88,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 90,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 92,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'demonstrate_plugin_framework' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 94,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 95,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 100,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 104,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 107,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 109,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 112,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 115,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 117,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 118,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 119,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 120,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 123,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 126,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 127,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 129,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 132,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 134,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 136,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'demonstrate_enhanced_features' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 138,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 139,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 142,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 151,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 153,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 155,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 156,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 157,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 160,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 163,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 164,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 165,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 166,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 167,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 171,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 172,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 173,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 174,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 177,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 178,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 179,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 180,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 181,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 183,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'demonstrate_web_interface' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 185,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 186,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 188,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 189,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 190,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 191,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 192,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 193,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 194,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 195,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 197,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 198,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 199,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 201,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'show_installation_commands' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 203,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 204,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 206,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 207,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 209,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 210,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 212,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 213,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 215,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 216,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 217,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 218,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 219,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 220,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 221,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 227,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 228,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 229,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 248,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 249,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 250,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 251,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_ultimate_suite_v9.py",
      "line_number": 252,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 66,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 113,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 131,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_installation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 172,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_prerequisites' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 204,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_internet' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 209,
      "column": 8,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 212,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_disk_space' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 224,
      "column": 8,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 227,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_directories' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 253,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'install_python_packages' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 268,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'install_optional_packages' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 268,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'install_optional_packages' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 282,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'install_package' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 304,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'install_system_packages' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 304,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'install_system_packages' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 325,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'detect_linux_distro' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 351,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'install_linux_packages' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 351,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'install_linux_packages' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 389,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'install_macos_packages' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 389,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'install_macos_packages' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 409,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'install_windows_packages' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 409,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'install_windows_packages' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 415,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_configuration' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 486,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_installation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 523,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'print_banner' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 523,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'print_banner' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 535,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 537,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'print_installation_summary' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 537,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'print_installation_summary' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 559,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 562,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 564,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 566,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'launch_suite' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 566,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'launch_suite' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 592,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 618,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 619,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 620,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 622,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 216,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 169,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 181,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 184,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 245,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 247,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 262,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 275,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 278,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 285,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 294,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 298,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 301,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 364,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 378,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 382,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 384,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 387,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 397,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 402,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 404,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 407,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 477,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 483,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 498,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 500,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 516,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 518,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 587,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_ultimate_suite_v9.py",
      "line_number": 590,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 70,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after 'try' statement on line 69",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 60,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 63,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 89,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 90,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 91,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 92,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 114,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 169,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 186,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 196,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 211,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 222,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 241,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 246,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 263,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 267,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/validate_v5_simple.py",
      "line_number": 268,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate5_progression.py",
      "line_number": 40,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 39",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate5_progression.py",
      "line_number": 30,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate5_progression.py",
      "line_number": 321,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 147,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_cloud_native_interface' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 180,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_cloud_providers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 202,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_cloud_provider' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 231,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_orchestration_services' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 251,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_docker' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 284,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_kubernetes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 316,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_service_mesh' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 336,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_configure_monitoring_stack' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 372,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_docker_configs' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 438,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_kubernetes_configs' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 571,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_deployment_manifests' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 615,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_system_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 654,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'deploy_to_environment' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 689,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 712,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 715,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 716,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 725,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 726,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 727,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 729,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 731,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 733,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 735,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 737,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 739,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 741,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 744,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 746,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 748,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 750,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 751,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 756,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 22,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 145,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 176,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 186,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 194,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 199,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 210,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 215,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 224,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 228,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 248,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 281,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 313,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 333,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 369,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 432,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 435,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 565,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 568,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 577,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 609,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 612,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 651,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 657,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 681,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 686,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/cloud_native_interface.py",
      "line_number": 709,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure_discovery_simple.py",
      "line_number": 675,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/devops_automation_engine.py",
      "line_number": 53,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 52",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/devops_automation_engine.py",
      "line_number": 564,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/devops_automation_engine.py",
      "line_number": 106,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/devops_automation_engine.py",
      "line_number": 173,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/devops_automation_engine.py",
      "line_number": 622,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/devops_automation_engine.py",
      "line_number": 876,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/devops_automation_engine.py",
      "line_number": 880,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/init_noxpanel.py",
      "line_number": 79,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 78",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/init_noxpanel.py",
      "line_number": 944,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/clean_start.py",
      "line_number": 34,
      "column": 19,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/clean_start.py",
      "line_number": 101,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/clean_start.py",
      "line_number": 229,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/clean_start.py",
      "line_number": 251,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/clean_start.py",
      "line_number": 271,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/clean_start.py",
      "line_number": 285,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 856,
      "column": 4,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected 'except' or 'finally' block",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 913,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 942,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 972,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 1008,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 1023,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 1055,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 1076,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 1097,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 1118,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 1151,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/simple_noxpanel.py",
      "line_number": 1174,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 39,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 138,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_plugin_ecosystem' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 174,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_plugin_sdk' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 202,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_plugin_template' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 391,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_development_tools' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 485,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_api_bindings' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 640,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_plugin_marketplace' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 672,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_configure_security_framework' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 714,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_analytics_system' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 753,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_sandbox_environment' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 801,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_sdk_documentation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 893,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_ecosystem_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 939,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 988,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_simulate_malware_scan' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1022,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1049,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1052,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1053,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1062,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1063,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1064,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1066,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1068,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1070,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1071,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1072,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1073,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1075,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1078,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1080,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1082,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1084,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1087,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1089,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1091,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1093,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1094,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1099,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1008,
      "column": 34,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'exec(', 'eval(', 'subprocess.call', 'os.system',",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1008,
      "column": 25,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'exec(', 'eval(', 'subprocess.call', 'os.system',",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1008,
      "column": 43,
      "issue_type": "security",
      "severity": "medium",
      "title": "Security Issue",
      "description": "Use subprocess.run() instead for better security",
      "suggestion": "",
      "code_snippet": "'exec(', 'eval(', 'subprocess.call', 'os.system',",
      "rule_id": "security-subprocess-call"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 497,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 136,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 170,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 199,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 250,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 255,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 266,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 276,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 292,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 312,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 322,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 333,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 385,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 388,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 479,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 482,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 634,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 637,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 669,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 711,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 750,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 798,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 890,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 936,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 942,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 981,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 985,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1019,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_ecosystem_toolkit.py",
      "line_number": 1046,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 62,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 73,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 80,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 85,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 89,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 97,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'enable' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 109,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'disable' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 124,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 124,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'webapp_instance' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 129,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'register_endpoint' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 129,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'register_endpoint' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 148,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'register_ui_component' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 148,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'register_ui_component' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 156,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_network_devices' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 162,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_ai_models' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 168,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'query_ai' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log_event' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log_event' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 182,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 192,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 222,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'execute_in_sandbox' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 222,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'execute_in_sandbox' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 227,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'restricted_import' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 227,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'name' in function 'restricted_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 243,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 255,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'discover_plugins' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 275,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 329,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'unload_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 347,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'enable_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 357,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'disable_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 366,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_plugin_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 378,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'list_plugins' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 387,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'install_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 433,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_plugin_template' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 544,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 548,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 552,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 206,
      "column": 31,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'__import__', 'eval(', 'exec(', 'compile(',",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 206,
      "column": 40,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'__import__', 'eval(', 'exec(', 'compile(',",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 420,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 102,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 106,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 114,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 118,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 146,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 154,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 177,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 212,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 253,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 269,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 271,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 278,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 282,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 291,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 301,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 322,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 326,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 332,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 340,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 344,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 360,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 411,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 416,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 426,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 430,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 438,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 528,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_framework.py",
      "line_number": 532,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 39,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 38",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 481,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 95,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 106,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 109,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 117,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 155,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 227,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 229,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 237,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 239,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 258,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 308,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 397,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 408,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 410,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 412,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 441,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 462,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 467,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 475,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 484,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 486,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 487,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 505,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 552,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_noxpanel.py",
      "line_number": 566,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/demo_noxpanel.py",
      "line_number": 93,
      "column": 9,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 67,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 86,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_objectives' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 86,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_objectives' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 331,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 380,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 381,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 382,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 383,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 384,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 389,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 391,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 20,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 83,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 180,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 185,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 189,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 198,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 207,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 211,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 231,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 234,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 263,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 329,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate7_preparation_system.py",
      "line_number": 369,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 42,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 41",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 19,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 148,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 238,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 340,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 352,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 432,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 434,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 457,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 461,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 485,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcrawler.py",
      "line_number": 543,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 24,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_logging' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 43,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'check_dependencies' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 75,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_default_config' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 98,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 102,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'safe_import_webapp' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 121,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 123,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 124,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 125,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 133,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 137,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 139,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 143,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 146,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 151,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 154,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 157,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 158,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 159,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 160,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 172,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 178,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 176,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 61,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 68,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 70,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 116,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 118,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/launch_ultimate_suite_v9_fixed.py",
      "line_number": 177,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_network_scanner.py",
      "line_number": 5,
      "column": 36,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/conversation_processor.py",
      "line_number": 55,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 54",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/conversation_processor.py",
      "line_number": 20,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/conversation_processor.py",
      "line_number": 568,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/conversation_processor.py",
      "line_number": 589,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/conversation_processor.py",
      "line_number": 593,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/conversation_processor.py",
      "line_number": 625,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/conversation_processor.py",
      "line_number": 628,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/conversation_processor.py",
      "line_number": 701,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 50,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 49",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 29,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 125,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 248,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 294,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 352,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 372,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 401,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 424,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 516,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 519,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 526,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 533,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 552,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 582,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 621,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 622,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 623,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 624,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 631,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 812,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 814,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 921,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 923,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_unified.py",
      "line_number": 944,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_status_report.py",
      "line_number": 53,
      "column": 34,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 58,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 59,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 60,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 61,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 62,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 63,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 88,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 108,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 113,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 141,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 146,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_launcher.py",
      "line_number": 220,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 9,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_direct' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 10,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 11,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 21,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 25,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 28,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 32,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 35,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 39,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 42,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 47,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 50,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 52,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 56,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/direct_test_v9.py",
      "line_number": 57,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 592,
      "column": 9,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected 'except' or 'finally' block",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 65,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 146,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 178,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 186,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 196,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 204,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 409,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 528,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 559,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v9.py",
      "line_number": 632,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 17,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 21,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'analyze_syntax_errors' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 21,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_syntax_errors' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_fix_commands' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_fix_commands' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 115,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_fix_script' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 115,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_fix_script' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 145,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 152,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 153,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 154,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 155,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 156,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 157,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 158,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 162,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manual_fix_assistant.py",
      "line_number": 164,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_start.py",
      "line_number": 65,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 64",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_start.py",
      "line_number": 148,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_start.py",
      "line_number": 157,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_start.py",
      "line_number": 198,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_start.py",
      "line_number": 219,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_start.py",
      "line_number": 239,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_start.py",
      "line_number": 252,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 74,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 96,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_services' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 96,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_services' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 319,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_deployment_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 371,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 372,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 373,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 374,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 375,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 380,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 382,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 20,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 94,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 188,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 193,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 197,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 215,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 219,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 242,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 248,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 273,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 282,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/production_deployment_system.py",
      "line_number": 360,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 42,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 62,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_webapp' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 88,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'stop_webapp' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 88,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_webapp' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 95,
      "column": 12,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 99,
      "column": 16,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 102,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_web_interface_responsiveness' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 164,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_system_metrics_collection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 221,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_network_scanner_functionality' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 285,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_enhanced_copilot' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 332,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_plugin_marketplace' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 397,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_error_handling' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 462,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_performance_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 531,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_concurrent_access' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 600,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_recommendations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 643,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_test_results' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 660,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_all_tests' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 724,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 726,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 727,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 734,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 735,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 736,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 737,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 738,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 741,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 743,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 746,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 748,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 750,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 33,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 81,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 85,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 654,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 657,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 689,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 692,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 695,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 708,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_stability_tester.py",
      "line_number": 713,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 19,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_simple_knowledge_db' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 527,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 528,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 534,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 535,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 536,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 537,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 538,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 539,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 540,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 541,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 542,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 543,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 544,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 546,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 550,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 521,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_simple_kb.py",
      "line_number": 522,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_master_dashboard.py",
      "line_number": 40,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 39",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_master_dashboard.py",
      "line_number": 19,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_master_dashboard.py",
      "line_number": 296,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_master_dashboard.py",
      "line_number": 305,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_master_dashboard.py",
      "line_number": 313,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_master_dashboard.py",
      "line_number": 314,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 96,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 205,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_comprehensive_scan' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 244,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_perform_comprehensive_scan' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 287,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_files_to_scan' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 315,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_should_exclude_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 330,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_scan_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 352,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_scan_syntax_issues' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 409,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_scan_security_issues' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 464,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_scan_style_issues' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 517,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_scan_performance_issues' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 556,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_module_group' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 579,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_classify_detected_issues' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 604,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_apply_automatic_fixes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 660,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_fix_trailing_whitespace' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 682,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_resolution_plans' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 725,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_recommended_action' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 742,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_identify_bulk_fixes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 773,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_coordinate_with_gate6' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 806,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_diagnostic_reports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 842,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_scan_summary' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 881,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 898,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 901,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 902,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 911,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 912,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 913,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 914,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 916,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 917,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 918,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 919,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 920,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 921,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 923,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 924,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 925,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 926,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 927,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 929,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 931,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 933,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 935,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 937,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 938,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 943,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 23,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 240,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 263,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 266,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 280,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 284,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 308,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 312,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 327,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 349,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 406,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 461,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 514,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 553,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 598,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 601,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 635,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 653,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 657,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 676,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 679,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 718,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 722,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 770,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 803,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 836,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 839,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 878,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/copilot_problem_detector.py",
      "line_number": 895,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_validation_engine.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_validation_engine.py",
      "line_number": 21,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_validation_engine.py",
      "line_number": 67,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_validation_engine.py",
      "line_number": 490,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_validation_engine.py",
      "line_number": 493,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_validation_engine.py",
      "line_number": 496,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_validation_engine.py",
      "line_number": 503,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_validation_engine.py",
      "line_number": 574,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_validation_engine.py",
      "line_number": 591,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_validation_engine.py",
      "line_number": 610,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 55,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 54",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 598,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 103,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 122,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 194,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 196,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 214,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 237,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 240,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 456,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 458,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 548,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 561,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 580,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 624,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 643,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 659,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 691,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 709,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 1296,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deep_analysis_engine.py",
      "line_number": 1298,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 53,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 54,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 55,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 63,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 135,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'from_file' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 135,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'cls' in function 'from_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 148,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'save_to_file' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 148,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_to_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 164,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_jwt_token' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 184,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'verify_jwt_token' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 196,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_rate_limited' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 212,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'record_failed_attempt' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 212,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'record_failed_attempt' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 227,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_ip_blocked' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 231,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 245,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_session' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 264,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 285,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'start_monitoring' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 285,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_monitoring' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 293,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'stop_monitoring' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 293,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_monitoring' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 300,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_monitor_loop' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 337,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'record_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 337,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'record_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 345,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 362,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 431,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 441,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_redis' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 459,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_init_plugins' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 473,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_middleware' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 477,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'before_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 500,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'after_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 500,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'response' in function 'after_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 520,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 527,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'health_check' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 545,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'system_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 581,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_metrics' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 586,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'list_plugins' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 606,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'enable_plugin' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 606,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'plugin_name' in function 'enable_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 618,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'disable_plugin' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 618,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'plugin_name' in function 'disable_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 630,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'login' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 658,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'logout' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 664,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'index' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 669,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 674,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_docs' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 697,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_websocket_handlers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 701,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'handle_connect' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 729,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'handle_disconnect' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 739,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'handle_join_room' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 739,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'data' in function 'handle_join_room' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 768,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'handle_leave_room' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 768,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'data' in function 'handle_leave_room' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 793,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'handle_metrics_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 802,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'handle_status_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 818,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'handle_plugin_command' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 818,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'data' in function 'handle_plugin_command' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 861,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_error_handlers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 865,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'not_found' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 865,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'not_found' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 874,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'internal_error' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 874,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'internal_error' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 883,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'rate_limit_exceeded' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 883,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'rate_limit_exceeded' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 895,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'forbidden' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 895,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'forbidden' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 902,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'start_background_tasks' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 902,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_background_tasks' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 915,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_start_metrics_broadcaster' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 917,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'broadcast_metrics' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 935,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_start_cleanup_task' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 937,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'cleanup_task' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 955,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 955,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 1012,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'shutdown' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 1012,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'shutdown' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 1033,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 47,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 142,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 145,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 157,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 225,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 334,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 429,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 438,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 456,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 468,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 470,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 487,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 493,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 497,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 726,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 736,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 765,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 790,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 875,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 928,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 948,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 960,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 961,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 962,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 963,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 964,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 965,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 966,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 967,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 1008,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main_unified_server.py",
      "line_number": 1046,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 23,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'setup_logging' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'setup_logging' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 39,
      "column": 8,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'fix_system_metrics_collection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 114,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_missing_network_scanner_methods' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 198,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_enhanced_sysadmin_copilot' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 287,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_plugin_marketplace_foundation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 350,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_all_fixes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 401,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 403,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 404,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 409,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 410,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 411,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 412,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 413,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 415,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 416,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 417,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 418,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 419,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 95,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 111,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 195,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 284,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 347,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 372,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 376,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 378,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 380,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes_corrected.py",
      "line_number": 390,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 4,
      "column": 34,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 543,
      "column": 13,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'exec(',",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 544,
      "column": 13,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "eval() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "'eval(',",
      "rule_id": "security-eval"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 42,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 233,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 244,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 246,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 254,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 258,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 264,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 269,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 297,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 322,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 326,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 354,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 413,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 417,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 437,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 440,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 463,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 493,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 530,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 558,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 561,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 573,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 588,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 614,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_plugin_system.py",
      "line_number": 632,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/chatgpt_infrastructure_integration.py",
      "line_number": 32,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 31",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/chatgpt_infrastructure_integration.py",
      "line_number": 22,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/chatgpt_infrastructure_integration.py",
      "line_number": 931,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 33,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 75,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_admin_plugin_manager' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 499,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_system_status_widget' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 968,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_all_components' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1026,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_generation_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1041,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1044,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1045,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1054,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1055,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1056,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1057,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1059,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1061,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1064,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1066,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1068,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1069,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1074,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 522,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 73,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 491,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 496,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 960,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 965,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1018,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1023,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dashboard_enhancement_builder.py",
      "line_number": 1038,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 30,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 78,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'print_header' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 78,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'print_header' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 80,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 81,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 82,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 83,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 84,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 85,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 86,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 88,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_component_integrity' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 90,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 131,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 134,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 139,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_dependencies' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 141,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 145,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 150,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 153,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 157,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 162,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 165,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_package_version' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 179,
      "column": 8,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 182,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_webapp_launch' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 184,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 198,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 204,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 210,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 215,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 216,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 219,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 222,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 225,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 229,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 230,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 234,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_components_integration' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 236,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 240,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 247,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 250,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 253,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 256,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 262,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 265,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 268,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 272,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_web_assets' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 274,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 288,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 292,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_configuration' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 294,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 311,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 314,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 317,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 323,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'perform_auto_fixes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 325,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 336,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 338,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 358,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 360,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 365,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_launch_script' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 367,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 483,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 486,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 489,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_recommendations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 519,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_full_audit' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 557,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'print_audit_summary' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 557,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'print_audit_summary' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 559,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 560,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 561,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 570,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 576,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 583,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 588,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 592,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 594,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 596,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 598,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 600,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 601,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 603,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 604,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 605,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 607,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 608,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 609,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 611,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 613,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'save_audit_report' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 613,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_audit_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 619,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 621,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 624,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 423,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 411,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 427,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_v9_audit.py",
      "line_number": 471,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/main.py",
      "line_number": 4,
      "column": 16,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/network_scanner_fixes.py",
      "line_number": 16,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_quick_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/network_scanner_fixes.py",
      "line_number": 71,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_calculate_network_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/network_scanner_fixes.py",
      "line_number": 87,
      "column": 4,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/network_scanner_fixes.py",
      "line_number": 90,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_network_topology' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 67,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 95,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 113,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 122,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'collect_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 179,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 256,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_metrics_trend' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 298,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 301,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load_script_templates' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 472,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_script' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 525,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_estimate_runtime' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 539,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_requires_admin_privileges' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 549,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 699,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 699,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'ai_manager' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 708,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 720,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'suggest_maintenance_tasks' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 827,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_task_history' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 831,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_metrics_trend' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 893,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 897,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 904,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 592,
      "column": 54,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "process = await asyncio.create_subprocess_exec(",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 631,
      "column": 54,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "process = await asyncio.create_subprocess_exec(",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 667,
      "column": 54,
      "issue_type": "security",
      "severity": "critical",
      "title": "Security Issue",
      "description": "exec() can execute arbitrary code",
      "suggestion": "",
      "code_snippet": "process = await asyncio.create_subprocess_exec(",
      "rule_id": "security-exec"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 462,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 176,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 556,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 764,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/sysadmin_copilot.py",
      "line_number": 875,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 11,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 24,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 28,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 33,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 41,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 58,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 59,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 60,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 61,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 67,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 70,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 74,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 80,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/restart_noxpanel.py",
      "line_number": 83,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure_discovery.py",
      "line_number": 216,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_optimized_noxpanel.py",
      "line_number": 71,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 70",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_optimized_noxpanel.py",
      "line_number": 1314,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_optimized_noxpanel.py",
      "line_number": 1232,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_optimized_noxpanel.py",
      "line_number": 1262,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_optimized_noxpanel.py",
      "line_number": 2012,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 58,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 65,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 138,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 151,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 157,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'initialize_models' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 157,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize_models' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 191,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_ollama_client' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 253,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_network_with_ai' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 293,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 299,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'perform_comprehensive_scan' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 335,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_discover_devices' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 362,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_ping_scan' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 375,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'ping_host' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 375,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'ip' in function 'ping_host' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 413,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_perform_deep_scan' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 436,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_scan_ports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 444,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'scan_port' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 444,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'port' in function 'scan_port' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 463,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_detect_services' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 493,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_hostname' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 501,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_mac_address' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 516,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_fingerprint_os' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 538,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_grab_banners' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 567,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_map_network_topology' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 596,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_assess_vulnerabilities' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 652,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_calculate_device_security_score' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 671,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_calculate_risk_score' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 686,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_calculate_statistics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 716,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 722,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_app' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 743,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 747,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'index' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 751,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_ai_models' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 773,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'query_ai' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 790,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'network_scan' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 809,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_network_devices' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 846,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_security_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 874,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'set_theme' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 874,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'theme_name' in function 'set_theme' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 885,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'static_files' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 885,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'filename' in function 'static_files' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 889,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 889,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 75,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 187,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 189,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 280,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 302,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 332,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 396,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 805,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 891,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v8.py",
      "line_number": 909,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 445,
      "column": 118,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid decimal literal",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 420,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 96,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 113,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 244,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 576,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 711,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 723,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 778,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 803,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 807,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 809,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 811,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_quick_fixes.py",
      "line_number": 821,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_setup.py",
      "line_number": 21,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 133,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initiate_gate6_progression' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 158,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_objective' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 184,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_objective_dependencies' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 197,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_objective_resources' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 226,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_objective_criteria' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 258,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_calculate_readiness_score' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 277,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_progression_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 311,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_objective_progress' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 345,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 368,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 371,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 372,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 381,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 382,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 383,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 384,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 386,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 388,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 390,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 392,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 394,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 396,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 398,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 400,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 402,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 403,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 408,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 20,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 131,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 155,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 161,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 178,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 181,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 270,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 274,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 308,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 332,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 342,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/gate6_progression_system.py",
      "line_number": 365,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_v5_fixed.py",
      "line_number": 36,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 35",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_v5_fixed.py",
      "line_number": 532,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_v5_fixed.py",
      "line_number": 206,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_v5_fixed.py",
      "line_number": 208,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_v5_fixed.py",
      "line_number": 237,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_v5_fixed.py",
      "line_number": 329,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_v5_fixed.py",
      "line_number": 408,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_v5_fixed.py",
      "line_number": 473,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_v5_fixed.py",
      "line_number": 488,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxpanel_v5_fixed.py",
      "line_number": 516,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 5,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 168,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 195,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 244,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 250,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 269,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 285,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 292,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 379,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 422,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 481,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 522,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 564,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 588,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 593,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 596,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 602,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 604,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 617,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 647,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 657,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 663,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 706,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 731,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai_monitor.py",
      "line_number": 780,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_gateway.py",
      "line_number": 5,
      "column": 28,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_gateway.py",
      "line_number": 371,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_gateway.py",
      "line_number": 186,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_gateway.py",
      "line_number": 287,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_gateway.py",
      "line_number": 318,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_gateway.py",
      "line_number": 385,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_gateway.py",
      "line_number": 392,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_gateway.py",
      "line_number": 1122,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 64,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'to_dict' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 77,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 208,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_health_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 223,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_system_health' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 223,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_system_health' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 347,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_performance_trends' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 399,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'analyze_threat_level' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 450,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'update_gate7_readiness' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 450,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'update_gate7_readiness' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 27,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 106,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 107,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 130,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 152,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 157,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 186,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 243,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 251,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 268,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 270,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 318,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 388,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 409,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 416,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 432,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 437,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 471,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 509,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 517,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 546,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 565,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/autonomous_operations_monitor.py",
      "line_number": 635,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 5,
      "column": 23,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 1037,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 124,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 146,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 212,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 275,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 290,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 299,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 309,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 328,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 352,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 1048,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 1064,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 1098,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/dev_scanner.py",
      "line_number": 1131,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_demonstration.py",
      "line_number": 28,
      "column": 21,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/system_demonstration.py",
      "line_number": 14,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 18,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'after_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 18,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'response' in function 'after_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 38,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'require_auth' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 38,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'f' in function 'require_auth' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 41,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'decorated_function' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 55,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'index' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 66,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'knowledge' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 75,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'knowledge_stats' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 89,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'knowledge_suggestions' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 116,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'knowledge_search' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 141,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'login' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 150,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'not_found' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 150,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'not_found' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 154,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'internal_error' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 154,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'internal_error' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 158,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'rate_limit_exceeded' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 158,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'rate_limit_exceeded' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 162,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 163,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 164,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 165,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultra_fast_server.py",
      "line_number": 8,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manage.py",
      "line_number": 26,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 25",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manage.py",
      "line_number": 265,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manage.py",
      "line_number": 221,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/manage.py",
      "line_number": 247,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 50,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 51,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 95,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 102,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_app' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 128,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_flask_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 141,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_security' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 149,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'apply_security_headers' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 149,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'response' in function 'apply_security_headers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 156,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_fallback_security' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 159,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'apply_basic_security_headers' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 159,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'response' in function 'apply_basic_security_headers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 165,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_core_components' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 179,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_register_blueprints' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 193,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 197,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'index' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 205,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'dashboard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 210,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'noxpanel' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 217,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'heimnetz' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 224,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'noxguard' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 231,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'health_check' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 248,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_models' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 289,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_network_devices' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 300,
      "column": 16,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'check_device' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 300,
      "column": 16,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'ip' in function 'check_device' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 304,
      "column": 20,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 308,
      "column": 24,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 365,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'api_security_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 376,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'set_theme' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 376,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'theme_name' in function 'set_theme' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 386,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'static_files' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 386,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'filename' in function 'static_files' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 390,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_error_handlers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 394,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'not_found' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 394,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'not_found' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 401,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'internal_error' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 401,
      "column": 8,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'error' in function 'internal_error' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 407,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 407,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 440,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 442,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 443,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 297,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 153,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 177,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 191,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 412,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 413,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 414,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 415,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 416,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 417,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_webapp_v7.py",
      "line_number": 433,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 53,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 59,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_archive_structure' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 59,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_archive_structure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 103,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'identify_files_to_archive' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 198,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'archive_files' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 198,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'archive_files' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 251,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_reference_documentation' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 251,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_reference_documentation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 332,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_migration_guide' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 332,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_migration_guide' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 523,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'execute_archiving' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 523,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'execute_archiving' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 546,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'create_completion_report' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 546,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_completion_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 581,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 583,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 584,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 603,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 604,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 605,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 606,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 200,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 212,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 231,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 233,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 243,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 246,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 249,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_project_archiver.py",
      "line_number": 532,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_unified.py",
      "line_number": 43,
      "column": 21,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/install_unified.py",
      "line_number": 413,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/fixed_system_metrics.py",
      "line_number": 1,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'collect_system_metrics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/fixed_system_metrics.py",
      "line_number": 60,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/fixed_system_metrics.py",
      "line_number": 1,
      "column": 0,
      "issue_type": "logging",
      "severity": "medium",
      "title": "Missing Logging Import",
      "description": "File uses logging but doesn't import logging module",
      "suggestion": "Add: import logging",
      "code_snippet": "",
      "rule_id": "missing-logging-import"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 54,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_backup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 68,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'read_fix_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'read_webapp_content' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 93,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'integrate_system_metrics_fix' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 142,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'integrate_network_scanner_fixes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 187,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'integrate_enhanced_copilot' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 218,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'integrate_plugin_marketplace' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 249,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_new_api_routes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 338,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'add_initialization_fixes' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 369,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'write_integrated_webapp' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 380,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_integration_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 401,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_integration' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 450,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 452,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 453,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 459,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 460,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 461,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 462,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 463,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 464,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 466,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 467,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 173,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 59,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 62,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 65,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 75,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 81,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 90,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 350,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 374,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 377,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 395,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 398,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 438,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 439,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ultimate_suite_integrator.py",
      "line_number": 444,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 28,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 27",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 782,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 348,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 384,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 410,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 765,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 836,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 855,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 878,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 915,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 922,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 928,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 954,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_admin_panel.py",
      "line_number": 983,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/master_control_system.py",
      "line_number": 110,
      "column": 8,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: unexpected indent",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/master_control_system.py",
      "line_number": 684,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/master_control_system.py",
      "line_number": 165,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_knowledge_base.py",
      "line_number": 274,
      "column": 51,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_knowledge_base.py",
      "line_number": 152,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_knowledge_base.py",
      "line_number": 608,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_knowledge_base.py",
      "line_number": 624,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_knowledge_base.py",
      "line_number": 628,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_knowledge_base.py",
      "line_number": 635,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/setup_knowledge_base.py",
      "line_number": 645,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 11,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_webapp' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 12,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 26,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 37,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 40,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 42,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 44,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 50,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 53,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 55,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 63,
      "column": 8,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 62,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/quick_test_v9_routes.py",
      "line_number": 65,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/enhanced_sysadmin_copilot.py",
      "line_number": 5,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 4",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 4,
      "column": 25,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 38,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 122,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 157,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 171,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 192,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 225,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 247,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 256,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 260,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 280,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 283,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 286,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 289,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 315,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_system.py",
      "line_number": 358,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/security_manager.py",
      "line_number": 43,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 42",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/security_manager.py",
      "line_number": 28,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 4,
      "column": 38,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 31,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 189,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 233,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 238,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 249,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 259,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 268,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 276,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 285,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 299,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 338,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 342,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 366,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 370,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 388,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 392,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 432,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 438,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 460,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/security/enterprise_session_manager.py",
      "line_number": 525,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_direct.py",
      "line_number": 20,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_direct.py",
      "line_number": 8,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_direct.py",
      "line_number": 92,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_direct.py",
      "line_number": 154,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_direct.py",
      "line_number": 195,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_direct.py",
      "line_number": 216,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_direct.py",
      "line_number": 265,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_direct.py",
      "line_number": 310,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_routes.py",
      "line_number": 34,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_routes.py",
      "line_number": 8,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_routes.py",
      "line_number": 64,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_routes.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_routes.py",
      "line_number": 86,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_routes.py",
      "line_number": 96,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/vm_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/vm_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/vm_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/vm_routes.py",
      "line_number": 139,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/vm_routes.py",
      "line_number": 155,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/vm_routes.py",
      "line_number": 171,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/vm_routes.py",
      "line_number": 187,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/vm_routes.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 49,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected 'except' or 'finally' block",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 66,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 120,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 164,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 241,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 338,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 358,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 398,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 451,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 467,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 517,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 579,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 601,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 617,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/knowledge_routes.py",
      "line_number": 678,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 113,
      "column": 30,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 621,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 112,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 163,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 191,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 209,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 212,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 231,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 250,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 256,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 273,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 278,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 307,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 310,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 330,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 336,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 354,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 394,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 408,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 454,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 474,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 485,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 611,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 670,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 697,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 725,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 757,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 761,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 764,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 774,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 775,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 776,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 777,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 778,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 783,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 786,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 787,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 791,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 793,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 816,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 817,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5.py",
      "line_number": 824,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/pi_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/pi_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/pi_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/pi_routes.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/pi_routes.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/pi_routes.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/pi_routes.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scripts_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scripts_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scripts_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scripts_routes.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scripts_routes.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scripts_routes.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scripts_routes.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/security_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/security_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/security_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/security_routes.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/security_routes.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/security_routes.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/security_routes.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot_routes.py",
      "line_number": 34,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot_routes.py",
      "line_number": 8,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot_routes.py",
      "line_number": 64,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot_routes.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot_routes.py",
      "line_number": 86,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot_routes.py",
      "line_number": 96,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/network_routes.py",
      "line_number": 34,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/network_routes.py",
      "line_number": 8,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/network_routes.py",
      "line_number": 64,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/network_routes.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/network_routes.py",
      "line_number": 86,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/network_routes.py",
      "line_number": 96,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/platforms_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/platforms_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/platforms_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/platforms_routes.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/platforms_routes.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/platforms_routes.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/platforms_routes.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/api_docs_routes.py",
      "line_number": 4,
      "column": 27,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/api_docs_routes.py",
      "line_number": 25,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/api_docs_routes.py",
      "line_number": 52,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/api_docs_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/api_docs_routes.py",
      "line_number": 90,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/api_docs_routes.py",
      "line_number": 108,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/api_docs_routes.py",
      "line_number": 126,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/certs_routes.py",
      "line_number": 34,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/certs_routes.py",
      "line_number": 8,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/certs_routes.py",
      "line_number": 64,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/certs_routes.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/certs_routes.py",
      "line_number": 86,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/certs_routes.py",
      "line_number": 96,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 38,
      "column": 26,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 450,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 54,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 107,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 128,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 201,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 270,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 319,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 369,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 410,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 439,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 486,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_api.py",
      "line_number": 521,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 23,
      "column": 4,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: unexpected indent",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 619,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 110,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 161,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 189,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 207,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 210,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 229,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 248,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 254,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 271,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 276,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 305,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 308,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 328,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 334,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 352,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 392,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 406,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 452,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 472,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 483,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 609,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 668,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 695,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 723,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 755,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 759,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 762,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 772,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 773,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 774,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 775,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 776,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 781,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 784,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 785,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 789,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 791,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 814,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 815,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/app_v5_backup.py",
      "line_number": 822,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/updates_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/updates_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/updates_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/updates_routes.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/updates_routes.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/updates_routes.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/updates_routes.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 20,
      "column": 19,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 1164,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 88,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 133,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 190,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 301,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 341,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 393,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 560,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 598,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 681,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 704,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 726,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 748,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 770,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 791,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 834,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 869,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 899,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 921,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 1104,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_direct.py",
      "line_number": 1316,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/analytics_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/analytics_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/analytics_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/analytics_routes.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/analytics_routes.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/analytics_routes.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/analytics_routes.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_simple.py",
      "line_number": 19,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/ai_monitor_simple.py",
      "line_number": 8,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/media_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/media_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/media_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/media_routes.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/media_routes.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/media_routes.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/media_routes.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 65,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected 'except' or 'finally' block",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 7,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 115,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 155,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 236,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 291,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 346,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 377,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 401,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models.py",
      "line_number": 434,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 52,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 12,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 183,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 209,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 262,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 265,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 305,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 368,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 371,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 386,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 422,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 437,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 496,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 555,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 662,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 673,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 695,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 731,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 749,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 773,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/job_scheduler.py",
      "line_number": 781,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 23,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'require_auth' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 23,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'f' in function 'require_auth' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 26,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'decorated_function' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 36,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_db_connection' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 81,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_stats' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 135,
      "column": 16,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 165,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_search_suggestions' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 221,
      "column": 16,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 261,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'advanced_search' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 333,
      "column": 16,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 378,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_analytics' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 417,
      "column": 16,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 449,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'register_enhanced_knowledge_api' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 449,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'app' in function 'register_enhanced_knowledge_api' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 16,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 76,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 157,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 256,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 370,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/enhanced_knowledge_api.py",
      "line_number": 442,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 227,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 5,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 183,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 289,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 382,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 479,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 520,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 548,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 588,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 613,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 654,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 682,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/admin_blueprint.py",
      "line_number": 689,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scheduler_routes.py",
      "line_number": 34,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scheduler_routes.py",
      "line_number": 8,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scheduler_routes.py",
      "line_number": 64,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scheduler_routes.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scheduler_routes.py",
      "line_number": 86,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/scheduler_routes.py",
      "line_number": 96,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/notifications_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/notifications_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/notifications_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/notifications_routes.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/notifications_routes.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/notifications_routes.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/notifications_routes.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/proxy_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/proxy_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/proxy_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/proxy_routes.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/proxy_routes.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/proxy_routes.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/proxy_routes.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/setup_routes.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/setup_routes.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/setup_routes.py",
      "line_number": 72,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/setup_routes.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/setup_routes.py",
      "line_number": 143,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/setup_routes.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/setup_routes.py",
      "line_number": 175,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_routes.py",
      "line_number": 34,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_routes.py",
      "line_number": 8,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_routes.py",
      "line_number": 64,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_routes.py",
      "line_number": 78,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_routes.py",
      "line_number": 86,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/models_routes.py",
      "line_number": 96,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot.py",
      "line_number": 73,
      "column": 26,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot.py",
      "line_number": 10,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot.py",
      "line_number": 89,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot.py",
      "line_number": 191,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot.py",
      "line_number": 229,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot.py",
      "line_number": 254,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/webpanel/chatbot.py",
      "line_number": 288,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/unified_architecture/unified_noxpanel.py",
      "line_number": 38,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/rate_limiter.py",
      "line_number": 4,
      "column": 24,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/rate_limiter.py",
      "line_number": 30,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/rate_limiter.py",
      "line_number": 400,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/rate_limiter.py",
      "line_number": 407,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/process_manager.py",
      "line_number": 4,
      "column": 27,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/process_manager.py",
      "line_number": 216,
      "column": 46,
      "issue_type": "security",
      "severity": "high",
      "title": "Security Issue",
      "description": "shell=True can be vulnerable to injection attacks",
      "suggestion": "",
      "code_snippet": "subprocess.Popen(restart_cmd, shell=True, creationflags=subprocess.CREATE_NEW_CONSOLE)",
      "rule_id": "security-shellTrue"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/process_manager.py",
      "line_number": 220,
      "column": 46,
      "issue_type": "security",
      "severity": "high",
      "title": "Security Issue",
      "description": "shell=True can be vulnerable to injection attacks",
      "suggestion": "",
      "code_snippet": "subprocess.Popen(restart_cmd, shell=True)",
      "rule_id": "security-shellTrue"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/process_manager.py",
      "line_number": 68,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/process_manager.py",
      "line_number": 160,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/process_manager.py",
      "line_number": 198,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/process_manager.py",
      "line_number": 229,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/process_manager.py",
      "line_number": 286,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 126,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 131,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_detect_environment' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 141,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_load_security_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 156,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 160,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_security_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 166,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_production' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'is_development' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 174,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_secret_key' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 189,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_rate_limits' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 196,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'should_enforce_ssl' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 200,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_security_headers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 9,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 129,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_config.py",
      "line_number": 136,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/connection_manager.py",
      "line_number": 4,
      "column": 30,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/connection_manager.py",
      "line_number": 120,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/connection_manager.py",
      "line_number": 141,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/connection_manager.py",
      "line_number": 169,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/knowledge_manager.py",
      "line_number": 4,
      "column": 29,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/knowledge_manager.py",
      "line_number": 33,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/knowledge_manager.py",
      "line_number": 179,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/knowledge_manager.py",
      "line_number": 446,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/knowledge_manager.py",
      "line_number": 451,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/knowledge_manager.py",
      "line_number": 456,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/knowledge_manager.py",
      "line_number": 576,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/knowledge_manager.py",
      "line_number": 737,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/knowledge_manager.py",
      "line_number": 752,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/knowledge_manager.py",
      "line_number": 797,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/app_factory.py",
      "line_number": 38,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected 'except' or 'finally' block",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/model_detector.py",
      "line_number": 4,
      "column": 26,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/model_detector.py",
      "line_number": 301,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/model_detector.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/model_detector.py",
      "line_number": 215,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/model_detector.py",
      "line_number": 274,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/model_detector.py",
      "line_number": 333,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/model_detector.py",
      "line_number": 396,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/model_detector.py",
      "line_number": 418,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/model_detector.py",
      "line_number": 446,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_headers.py",
      "line_number": 4,
      "column": 28,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_headers.py",
      "line_number": 27,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_headers.py",
      "line_number": 318,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_headers.py",
      "line_number": 333,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_headers.py",
      "line_number": 340,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/security_headers.py",
      "line_number": 404,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 34,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 60,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 67,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'restricted_import' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'restricted_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'name' in function 'restricted_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'globals' in function 'restricted_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'locals' in function 'restricted_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'fromlist' in function 'restricted_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 71,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'level' in function 'restricted_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 80,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__enter__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_type' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_val' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_tb' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 90,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 99,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'start_monitoring' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 99,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'start_monitoring' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 105,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'stop_monitoring' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 105,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'stop_monitoring' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 109,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'check_limits' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 109,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_limits' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 133,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'record_file_operation' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 133,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'record_file_operation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 138,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'record_network_connection' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 138,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'record_network_connection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 147,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 156,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__enter__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 171,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 171,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_type' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 171,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_val' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 171,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'exc_tb' in function '__exit__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 188,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'execute_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 235,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 239,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_plugin_metadata' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 270,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'create_sandbox_from_metadata' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 302,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'load_plugin_secure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 348,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'unload_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 365,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_loaded_plugins' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 369,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_plugin_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 20,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 168,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 184,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 186,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 228,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 229,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 244,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 267,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 310,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 316,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 322,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 340,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 344,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 345,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 351,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 358,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/plugin_sandbox.py",
      "line_number": 362,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 4,
      "column": 25,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 29,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 56,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 94,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 117,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 119,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 140,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 154,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 163,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 184,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/database_pool.py",
      "line_number": 232,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/llm_integration.py",
      "line_number": 4,
      "column": 27,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/llm_integration.py",
      "line_number": 26,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/llm_integration.py",
      "line_number": 101,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/llm_integration.py",
      "line_number": 199,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/llm_integration.py",
      "line_number": 289,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/llm_integration.py",
      "line_number": 304,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/llm_integration.py",
      "line_number": 306,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 33,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'register_blueprint' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 55,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_blueprint' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 59,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'init_app' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 77,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'list_blueprints' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 81,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'register_core_blueprint' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 81,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'name_or_blueprint' in function 'register_core_blueprint' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 81,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'blueprint' in function 'register_core_blueprint' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 101,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'apply_to_app' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 132,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'register_core_blueprints' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 201,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'register_category_blueprints' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 289,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log_route_summary' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 41,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 53,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 61,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 75,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 98,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 103,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 122,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 125,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 144,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 155,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 166,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 177,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 188,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 199,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 299,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/blueprint_registry.py",
      "line_number": 310,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/auth.py",
      "line_number": 31,
      "column": 21,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/runner.py",
      "line_number": 22,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_script' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/runner.py",
      "line_number": 22,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'script_path' in function 'run_script' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/runner.py",
      "line_number": 22,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'args' in function 'run_script' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/runner.py",
      "line_number": 57,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/runner.py",
      "line_number": 61,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/runner.py",
      "line_number": 64,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/script_manager.py",
      "line_number": 4,
      "column": 26,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/script_manager.py",
      "line_number": 291,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/script_manager.py",
      "line_number": 90,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/script_manager.py",
      "line_number": 165,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/script_manager.py",
      "line_number": 351,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/script_manager.py",
      "line_number": 381,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/api_test_utils.py",
      "line_number": 26,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 25",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 4,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 799,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 162,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 165,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 246,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 325,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 333,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 347,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 351,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 353,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 359,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 365,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 370,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 380,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 385,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 391,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 398,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 413,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 421,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 424,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 433,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 443,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 470,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 495,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 515,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 517,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 530,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 532,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 538,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 544,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 553,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 563,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 582,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 583,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 586,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 591,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 597,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 615,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 627,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 637,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 662,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 670,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 679,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 748,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 758,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/ai_monitor.py",
      "line_number": 765,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/nlp_processor.py",
      "line_number": 4,
      "column": 25,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/nlp_processor.py",
      "line_number": 26,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/nlp_processor.py",
      "line_number": 80,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/nlp_processor.py",
      "line_number": 119,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 4,
      "column": 26,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 35,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 150,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 152,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 189,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 191,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 195,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 197,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 203,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 207,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 329,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 340,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 403,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 421,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 432,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 450,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/context_loader.py",
      "line_number": 476,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/critical_optimized_noxpanel/deploy_and_validate.py",
      "line_number": 5,
      "column": 31,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/critical_optimized_noxpanel/optimized_noxpanel.py",
      "line_number": 37,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 4,
      "column": 32,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 176,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 182,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 768,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 771,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 774,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 776,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 779,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 801,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 809,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 811,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 814,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 818,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 849,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 878,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 897,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 914,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 931,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 948,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 954,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 971,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/infrastructure/auto_healing_monitor.py",
      "line_number": 977,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 13,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 28,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 29,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 30,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 33,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 35,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 39,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 48,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/example_script.py",
      "line_number": 51,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/simple_ui_validator.py",
      "line_number": 5,
      "column": 31,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/simple_ui_validator.py",
      "line_number": 31,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 39,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 75,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 75,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 78,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 80,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_test' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 80,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'test_func' in function 'run_test' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 112,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_docker_files_exist' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 127,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_main_entry_point' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 140,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_requirements_file' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 156,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_env_configuration' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 172,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_webpanel_structure' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 187,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_container_build' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 220,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_no_forbidden_modules' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 252,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_code_quality' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 271,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_security_basics' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 290,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_health_check' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 313,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_recommendations' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 313,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_recommendations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 341,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'determine_status' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 341,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'determine_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 362,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_full_audit' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 399,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'save_results' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 399,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'save_results' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 409,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 426,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 429,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 432,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_1.py",
      "line_number": 411,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/unified_architecture_generator.py",
      "line_number": 16,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 15",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/unified_architecture_generator.py",
      "line_number": 448,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 102,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_app_factory_wrapper' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 138,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_response_times_fixed' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 175,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_memory_usage_fixed' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 202,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_concurrent_load_fixed' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 232,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_performance_monitoring' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 284,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_final_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 454,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 455,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 456,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 458,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 459,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 460,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 274,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 65,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 66,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 71,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 79,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 97,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 98,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 135,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 160,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 162,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 166,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 172,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 192,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 199,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 224,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 229,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 281,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4b_final_push.py",
      "line_number": 446,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 24,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'achieve_excellence' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 67,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_optimize_api_integration' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 191,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_achieve_database_excellence' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 265,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_achieve_performance_mastery' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 335,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_achieve_testing_perfection' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 409,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_achieve_security_excellence' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 445,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_achieve_documentation_excellence' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 480,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_achieve_deployment_excellence' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 552,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_definitive_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 676,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 681,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 682,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 683,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 684,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 116,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 56,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 58,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 60,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 111,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 171,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 185,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 218,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 239,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 259,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 291,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 310,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 329,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 363,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 383,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 403,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 438,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 441,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 473,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 476,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 506,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 526,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 546,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/definitive_excellence_achiever.py",
      "line_number": 674,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/post_audit_optimization_engine.py",
      "line_number": 227,
      "column": 50,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: unexpected character after line continuation character",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ui_validator.py",
      "line_number": 5,
      "column": 24,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ui_validator.py",
      "line_number": 31,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ui_validator.py",
      "line_number": 212,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ui_validator.py",
      "line_number": 252,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ui_validator.py",
      "line_number": 312,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/route_tester.py",
      "line_number": 5,
      "column": 24,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/route_tester.py",
      "line_number": 31,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/route_tester.py",
      "line_number": 105,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 11,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_final_report' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 253,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 254,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 255,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 256,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 257,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 258,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 259,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 260,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 261,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 262,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 263,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 264,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 265,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 266,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 267,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 268,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 269,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 270,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 271,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 272,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 273,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 274,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 275,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 276,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 277,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 278,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 279,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 280,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 281,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 282,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 283,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 284,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 285,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/final_implementation_report.py",
      "line_number": 286,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/port_mapper.py",
      "line_number": 82,
      "column": 1,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after class definition on line 81",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/port_mapper.py",
      "line_number": 30,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/port_mapper.py",
      "line_number": 275,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/port_mapper.py",
      "line_number": 303,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 9,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 22,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 23,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 51,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 53,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 55,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 57,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 58,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 69,
      "column": 8,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 66,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/check_routes.py",
      "line_number": 67,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 29,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 36,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 37,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 38,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 39,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 40,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 51,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_consolidation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 92,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_backups' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 110,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_analyze_interfaces' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 135,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_analyze_single_interface' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 170,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_merge_configurations' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 200,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_update_primary_application' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 269,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_create_unified_entry_point' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 320,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_update_deployment_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 346,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_cleanup_fragmented_interfaces' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 357,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_consolidation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 402,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_consolidation_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 471,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 477,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 478,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 479,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 482,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 283,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 89,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 101,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 108,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 130,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 131,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 167,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 318,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 355,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 373,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 397,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 399,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_web_consolidation.py",
      "line_number": 469,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 27,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 92,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 92,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 95,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 97,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_gate_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 131,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'check_system_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 174,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_gate_audit' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 215,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_available_sequence' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 247,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'display_system_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 251,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 252,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 253,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 255,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 256,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 259,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 261,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 263,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 276,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 279,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 282,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 284,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 286,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 307,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 308,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 309,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 310,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_launcher.py",
      "line_number": 22,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/access_map_generator.py",
      "line_number": 21,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 20",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/access_map_generator.py",
      "line_number": 15,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/access_map_generator.py",
      "line_number": 148,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/access_map_generator.py",
      "line_number": 186,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/critical_implementation_engine.py",
      "line_number": 22,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 21",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/critical_implementation_engine.py",
      "line_number": 538,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log_result' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log_result' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'test_name' in function 'log_result' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'passed' in function 'log_result' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'points' in function 'log_result' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'details' in function 'log_result' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 61,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 63,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 65,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_security_headers_validation' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 65,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_security_headers_validation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 67,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 132,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 134,
      "column": 24,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 137,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 155,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_authentication_token_security' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 155,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_authentication_token_security' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 157,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 193,
      "column": 24,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 254,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 259,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_input_validation_sanitization' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 259,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_input_validation_sanitization' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 261,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 372,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 377,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_rate_limiting_implementation' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 377,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_rate_limiting_implementation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 379,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 388,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 500,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 505,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_sql_injection_prevention' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 505,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_sql_injection_prevention' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 507,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 535,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 592,
      "column": 32,
      "issue_type": "error_handling",
      "severity": "medium",
      "title": "Bare Except Clause",
      "description": "Using bare 'except Exception:' clause can hide errors",
      "suggestion": "Use specific exception types: except SpecificError:",
      "code_snippet": "",
      "rule_id": "bare-except"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 635,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 640,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_report' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 640,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 671,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_audit' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 671,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_audit' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 673,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 674,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 675,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 676,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 690,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 691,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 692,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 693,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 694,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 695,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 696,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 699,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 700,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 701,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 702,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 704,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 705,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 709,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 715,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 718,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_4.py",
      "line_number": 31,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 22,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 37,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 40,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 42,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_test' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 42,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'test_func' in function 'run_test' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 74,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_authentication_system' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 90,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_session_security' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 116,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_security_headers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 134,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_input_validation' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 156,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_full_audit' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 192,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 204,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 208,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_2.py",
      "line_number": 211,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/implementation_status_analyzer.py",
      "line_number": 19,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 18",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/implementation_status_analyzer.py",
      "line_number": 241,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/version_audit.py",
      "line_number": 24,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/version_audit.py",
      "line_number": 12,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 32,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 160,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_fix_database_connection_pool' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 180,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_test_database' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 198,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_validate_database_connections' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 218,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_optimize_database_performance' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 348,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'make_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 468,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_analyze_test_coverage' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 498,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_enhance_integration_tests' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 527,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_automate_security_tests' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 558,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_performance_benchmarks' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 588,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_enforce_quality_gates' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 638,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_implement_advanced_headers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 667,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_security_monitoring' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 700,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_setup_vulnerability_scanning' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 731,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_harden_access_controls' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 764,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_enhance_encryption' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 823,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_excellence_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 924,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 925,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 926,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 929,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 930,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 931,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 344,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 73,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 81,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 120,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 123,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 158,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 177,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 195,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 215,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 240,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 266,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 291,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 293,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 297,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 303,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 322,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 331,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 377,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 382,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 406,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 419,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 440,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 466,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 475,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 487,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 495,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 524,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 555,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 585,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 610,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 636,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 664,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 697,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 728,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 761,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 795,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 816,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 819,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase4_excellence_optimizer.py",
      "line_number": 916,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ultra_port_mapper.py",
      "line_number": 81,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 80",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ultra_port_mapper.py",
      "line_number": 671,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ultra_port_mapper.py",
      "line_number": 258,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ultra_port_mapper.py",
      "line_number": 393,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ultra_port_mapper.py",
      "line_number": 798,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ultra_port_mapper.py",
      "line_number": 829,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ultra_port_mapper.py",
      "line_number": 855,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 29,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 202,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_security_config_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 212,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_blueprint_registry_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 222,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_security_headers_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 231,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_plugin_sandbox_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 312,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_rate_limiter_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 321,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_auth_system_import' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 477,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_all_imports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 488,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_version_consistency' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 500,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_test_configuration_loading' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 639,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_calculate_final_score' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 657,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_generate_testing_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 757,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 758,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 759,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 762,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 763,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 764,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 573,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 71,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 79,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 101,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 103,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 112,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 114,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 127,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 148,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 164,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 172,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 193,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 259,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 284,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 303,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 370,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 391,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 432,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 434,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 436,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 446,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 468,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 531,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 558,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 565,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 591,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 598,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 629,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 636,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/phase3_testing_executor.py",
      "line_number": 749,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/version_tagger.py",
      "line_number": 18,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 17",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/version_tagger.py",
      "line_number": 376,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/frontend_backend_integrator.py",
      "line_number": 37,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 36",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/frontend_backend_integrator.py",
      "line_number": 23,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 19,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 36,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 36,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 40,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 43,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'move_file_safely' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 64,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'organize_backup_files' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 64,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'organize_backup_files' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'organize_log_files' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 84,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'organize_log_files' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 100,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'organize_test_results' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 100,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'organize_test_results' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 120,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'organize_reports' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 120,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'organize_reports' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 142,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'organize_deprecated_files' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 142,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'organize_deprecated_files' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 161,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'clean_empty_directories' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 161,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'clean_empty_directories' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 193,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_cleanup_report' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 193,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_cleanup_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 211,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_full_cleanup' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 211,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_full_cleanup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 236,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/cleanup_project.py",
      "line_number": 14,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 35,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 43,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'log_result' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 43,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'log_result' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 43,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'test_name' in function 'log_result' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 43,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'passed' in function 'log_result' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 43,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'points' in function 'log_result' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 43,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'details' in function 'log_result' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 60,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 62,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 64,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_response_time_performance' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 64,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_response_time_performance' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 66,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 92,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 95,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 122,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_memory_usage_optimization' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 122,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_memory_usage_optimization' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 124,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 136,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 137,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 138,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 158,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_database_query_performance' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 158,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_database_query_performance' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 160,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 187,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 195,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 203,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 211,
      "column": 16,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 239,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_concurrent_user_handling' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 239,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_concurrent_user_handling' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 241,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 244,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'make_request' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 244,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'url' in function 'make_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 244,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'timeout' in function 'make_request' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 270,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 293,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 294,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 295,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 296,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 316,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'test_resource_cleanup_verification' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 316,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'test_resource_cleanup_verification' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 318,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 327,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 328,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 329,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 332,
      "column": 12,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'simulate_work' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 351,
      "column": 20,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 366,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 367,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 368,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 375,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 376,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 377,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 407,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_report' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 407,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'generate_report' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 438,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'run_audit' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 438,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'run_audit' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 440,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 441,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 442,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 443,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 457,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 458,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 459,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 460,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 461,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 462,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 463,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 466,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 467,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 468,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 470,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 471,
      "column": 12,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 475,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 481,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 484,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/audit_3.py",
      "line_number": 32,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/ui.py",
      "line_number": 108,
      "column": 7,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: ':' expected after dictionary key",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/api.py",
      "line_number": 28,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 27",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/api.py",
      "line_number": 606,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/api.py",
      "line_number": 98,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/api.py",
      "line_number": 286,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/api.py",
      "line_number": 342,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/api.py",
      "line_number": 374,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/api.py",
      "line_number": 416,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/api.py",
      "line_number": 544,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/api.py",
      "line_number": 551,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/blueprints/api.py",
      "line_number": 625,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai/ai_advisor.py",
      "line_number": 22,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 21",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai/ai_advisor.py",
      "line_number": 14,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai/ai_advisor.py",
      "line_number": 170,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai/ai_advisor.py",
      "line_number": 214,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai/ai_advisor.py",
      "line_number": 256,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai/ai_advisor.py",
      "line_number": 300,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/ai/ai_advisor.py",
      "line_number": 490,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 31,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__post_init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 44,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'initialize' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 48,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'execute' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 52,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'cleanup' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 56,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 67,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 74,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'register_plugin' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 86,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'send_event' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 104,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_system_info' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 115,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'store_data' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/noxpanel_sdk.py",
      "line_number": 127,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'retrieve_data' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 4,
      "column": 33,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 32,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 147,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 148,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 149,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 150,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 196,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 197,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 205,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 220,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 228,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 230,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 259,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 269,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 273,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 284,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 311,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 317,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 327,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 337,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 343,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 347,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 358,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 386,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 406,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 410,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 416,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 436,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 440,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 451,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 552,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 553,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 554,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 555,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 556,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 561,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 565,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 572,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 578,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 610,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 620,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 624,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 644,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 653,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 659,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 669,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 670,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 671,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 674,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 678,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 688,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 695,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 697,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 700,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 705,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 747,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 759,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 760,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 764,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 769,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 817,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 826,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 829,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 841,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/deployment/blue_green_deployment.py",
      "line_number": 848,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/test_data/test_plugin/main.py",
      "line_number": 5,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/test_data/test_plugin/main.py",
      "line_number": 5,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'config' in function 'main' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugins/security_scanner/__init__.py",
      "line_number": 25,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 24",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugins/fritzbox/__init__.py",
      "line_number": 4,
      "column": 20,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 86,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 85",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 178,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 159,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 171,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 173,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 300,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 351,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 390,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 394,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 401,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 454,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 461,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 546,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voxtral_service.py",
      "line_number": 567,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 44,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 43",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 16,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 192,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 292,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 376,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 433,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 487,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 550,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 571,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 629,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 671,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 678,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 716,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 721,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/voice/voice_api.py",
      "line_number": 775,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/noxcore/utils/config.py",
      "line_number": 9,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 8",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/external_plugins/sample_plugin/routes.py",
      "line_number": 4,
      "column": 18,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/critical_optimized_noxpanel/blueprints/ui.py",
      "line_number": 18,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/critical_optimized_noxpanel/blueprints/api.py",
      "line_number": 22,
      "column": 22,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: invalid syntax",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/tests/security/security_test_suite.py",
      "line_number": 81,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected an indented block after function definition on line 80",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/tests/security/security_test_suite.py",
      "line_number": 711,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ai/code_reviewer.py",
      "line_number": 45,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected 'except' or 'finally' block",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/scripts/ai/text_summarizer.py",
      "line_number": 43,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected 'except' or 'finally' block",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/tools/plugin_generator.py",
      "line_number": 13,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'generate_plugin' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/tools/plugin_generator.py",
      "line_number": 16,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/tools/plugin_generator.py",
      "line_number": 59,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/tools/plugin_generator.py",
      "line_number": 62,
      "column": 8,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/AI/NoxPanel/plugin_sdk/tools/plugin_generator.py",
      "line_number": 11,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/api/serve.py",
      "line_number": 63,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_inference_service' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/api/serve.py",
      "line_number": 15,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/api/models.py",
      "line_number": 37,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'get_model_service' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/api/models.py",
      "line_number": 13,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/inference_service.py",
      "line_number": 25,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/inference_service.py",
      "line_number": 34,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_start_workers' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/inference_service.py",
      "line_number": 15,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/inference_service.py",
      "line_number": 56,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/inference_service.py",
      "line_number": 91,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 30,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 38,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize_default_models' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 299,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_get_model_memory_usage' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 18,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 169,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 183,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 204,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 208,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 326,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 330,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 387,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/aethercore/services/model_service.py",
      "line_number": 391,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/generated_plugins/example_plugin_skeleton/main.py",
      "line_number": 19,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '__init__' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/generated_plugins/example_plugin_skeleton/main.py",
      "line_number": 26,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function '_initialize' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/generated_plugins/example_plugin_skeleton/main.py",
      "line_number": 31,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'execute' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/generated_plugins/example_plugin_skeleton/main.py",
      "line_number": 61,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'get_health_status' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/generated_plugins/example_plugin_skeleton/main.py",
      "line_number": 69,
      "column": 4,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Parameter Type Hint",
      "description": "Parameter 'self' in function 'validate_config' is missing type annotation",
      "suggestion": "Add parameter type annotation: def func(param: ParamType):",
      "code_snippet": "",
      "rule_id": "missing-param-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/generated_plugins/example_plugin_skeleton/main.py",
      "line_number": 74,
      "column": 0,
      "issue_type": "type_hint",
      "severity": "low",
      "title": "Missing Return Type Hint",
      "description": "Function 'main' is missing return type annotation",
      "suggestion": "Add return type annotation: def func() -> ReturnType:",
      "code_snippet": "",
      "rule_id": "missing-return-type"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/generated_plugins/example_plugin_skeleton/main.py",
      "line_number": 78,
      "column": 4,
      "issue_type": "logging",
      "severity": "low",
      "title": "Print Statement",
      "description": "Using print() instead of proper logging",
      "suggestion": "Use logger.info(), logger.debug(), etc. instead",
      "code_snippet": "",
      "rule_id": "print-statement"
    },
    {
      "file_path": "/home/engine/project/archive/deprecated/generated_plugins/example_plugin_skeleton/main.py",
      "line_number": 54,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 1203,
      "column": 5,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: f-string: expecting '=', or '!', or ':', or '}'",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 129,
      "column": 57,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "created_at: datetime = field(default_factory=lambda: datetime.now(timezone.utc))",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 130,
      "column": 57,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "updated_at: datetime = field(default_factory=lambda: datetime.now(timezone.utc))",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 763,
      "column": 38,
      "issue_type": "deprecated",
      "severity": "high",
      "title": "Deprecated Code",
      "description": "datetime.now(timezone.utc) is deprecated in Python 3.12+",
      "suggestion": "Replace with: datetime.now(timezone.utc)",
      "code_snippet": "self.stats['last_scan'] = datetime.now(timezone.utc)",
      "rule_id": "deprecated-datetime-nowtimezone-utc"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 44,
      "column": 0,
      "issue_type": "style",
      "severity": "low",
      "title": "Import Order",
      "description": "Regular imports should come before 'from' imports",
      "suggestion": "Organize imports: stdlib, third-party, local imports",
      "code_snippet": "",
      "rule_id": "import-order"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 48,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 321,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 328,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 334,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 347,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 355,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 359,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 382,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 402,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 424,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 433,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 513,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 532,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 589,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 592,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 653,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 700,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 713,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 719,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 765,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 840,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 846,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 870,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 874,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 881,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 899,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 902,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 910,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 959,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 966,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 1088,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 1145,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 1200,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/unified_plugin_system.py",
      "line_number": 1201,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 856,
      "column": 4,
      "issue_type": "compatibility",
      "severity": "critical",
      "title": "Syntax Error",
      "description": "Syntax error: expected 'except' or 'finally' block",
      "suggestion": "",
      "code_snippet": "",
      "rule_id": "syntax-error"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 913,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 942,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 972,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 1008,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 1023,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 1055,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 1076,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 1097,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 1118,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 1151,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    },
    {
      "file_path": "/home/engine/project/AI/NoxPanel/simple_noxpanel_fixed.py",
      "line_number": 1174,
      "column": 0,
      "issue_type": "performance",
      "severity": "low",
      "title": "F-string in Logging",
      "description": "F-strings are evaluated even when logging level is disabled",
      "suggestion": "Use lazy formatting: logger.info('Message %s', value)",
      "code_snippet": "",
      "rule_id": "logging-fstring"
    }
  ]
}