# =============================================================================
# NoxSuite Ultimate Production Dockerfile
# Multi-stage build for optimized Python backend
# @author @hxwxdmhd
# @version 11.0.0
# =============================================================================

# =============================================================================
# Stage 1: Base Dependencies
# =============================================================================
FROM python:3.12-slim as base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    gcc \
    g++ \
    git \
    libpq-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r noxsuite && useradd -r -g noxsuite noxsuite

# =============================================================================
# Stage 2: Development Dependencies
# =============================================================================
FROM base as development

# Install development dependencies
COPY requirements-dev.txt /tmp/
RUN pip install --no-cache-dir -r /tmp/requirements-dev.txt

# =============================================================================
# Stage 3: Production Dependencies
# =============================================================================
FROM base as production-deps

# Install production dependencies
COPY requirements.txt /tmp/
RUN pip install --no-cache-dir -r /tmp/requirements.txt

# =============================================================================
# Stage 4: Production Application
# =============================================================================
FROM python:3.12-slim as production

# Copy Python dependencies from production-deps stage
COPY --from=production-deps /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=production-deps /usr/local/bin /usr/local/bin

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r noxsuite && useradd -r -g noxsuite noxsuite

# Create app directory
WORKDIR /app

# Create necessary directories
RUN mkdir -p /app/data /app/logs /app/config /app/static && \
    chown -R noxsuite:noxsuite /app

# Copy application code
COPY --chown=noxsuite:noxsuite . /app/

# Copy frontend build if available
COPY --chown=noxsuite:noxsuite frontend/build /app/frontend/build/

# Set permissions
RUN chmod +x /app/app.py

# Switch to non-root user
USER noxsuite

# Set environment variables
ENV FLASK_APP=app.py \
    FLASK_ENV=production \
    PYTHONPATH=/app \
    PORT=5000

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Default command
CMD ["python", "app.py"]
