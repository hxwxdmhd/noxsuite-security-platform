{% extends "base.html" %}

{% block title %}Network Dashboard - NoxPanel{% endblock %}

{% block page_title %}üåê Network Dashboard{% endblock %}

{% block page_actions %}
<div class="btn-group" role="group">
    <button type="button" class="btn btn-outline-primary" onclick="refreshNetwork()">
        <i class="bi bi-arrow-clockwise"></i> Refresh
    </button>
    <button type="button" class="btn btn-outline-info" onclick="runNetworkScan()">
        <i class="bi bi-radar"></i> Network Scan
    </button>
    <button type="button" class="btn btn-outline-warning" onclick="pingTest()">
        <i class="bi bi-wifi"></i> Ping Test
    </button>
</div>
{% endblock %}

{% block main_content %}
<div class="row" data-auto-refresh="true">
    <!-- Network Status Overview -->
    <div class="col-lg-12 mb-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-diagram-3"></i> Network Status Overview
                </h5>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-md-3">
                        <div class="card border-success">
                            <div class="card-body">
                                <i class="bi bi-wifi text-success" style="font-size: 2rem;"></i>
                                <h6 class="card-title mt-2">Internet</h6>
                                <span class="badge bg-success">Connected</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card border-primary">
                            <div class="card-body">
                                <i class="bi bi-router text-primary" style="font-size: 2rem;"></i>
                                <h6 class="card-title mt-2">Router</h6>
                                <span class="badge bg-primary">192.168.1.1</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card border-info">
                            <div class="card-body">
                                <i class="bi bi-pc-display text-info" style="font-size: 2rem;"></i>
                                <h6 class="card-title mt-2">Local IP</h6>
                                <span class="badge bg-info" id="localIP">Detecting...</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card border-warning">
                            <div class="card-body">
                                <i class="bi bi-speedometer2 text-warning" style="font-size: 2rem;"></i>
                                <h6 class="card-title mt-2">Speed</h6>
                                <span class="badge bg-warning" id="networkSpeed">Testing...</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Network Devices -->
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <h5 class="card-title mb-0">
                    <i class="bi bi-hdd-network"></i> Network Devices
                </h5>
                <button class="btn btn-sm btn-outline-primary" onclick="scanDevices()">
                    <i class="bi bi-search"></i> Scan
                </button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Device</th>
                                <th>IP Address</th>
                                <th>MAC Address</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="devicesTable">
                            <tr>
                                <td>
                                    <i class="bi bi-router text-primary"></i> Router
                                </td>
                                <td>192.168.1.1</td>
                                <td>XX:XX:XX:XX:XX:01</td>
                                <td>
                                    <span class="badge bg-success">
                                        <span class="status-indicator status-online"></span>
                                        Online
                                    </span>
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-outline-info" onclick="pingDevice('192.168.1.1')">
                                        <i class="bi bi-wifi"></i> Ping
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <i class="bi bi-pc-display text-info"></i> NoxPanel Server
                                </td>
                                <td id="serverIP">127.0.0.1</td>
                                <td>XX:XX:XX:XX:XX:02</td>
                                <td>
                                    <span class="badge bg-success">
                                        <span class="status-indicator status-online"></span>
                                        Online
                                    </span>
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-outline-success" onclick="viewLogs('server')">
                                        <i class="bi bi-file-text"></i> Logs
                                    </button>
                                </td>
                            </tr>
                            <!-- Dynamic devices will be populated here -->
                        </tbody>
                    </table>
                </div>
                
                <div class="alert alert-info mt-3">
                    <i class="bi bi-info-circle"></i>
                    <strong>Heimnetz Integration:</strong> This dashboard connects to your Heimnetz network monitoring system.
                </div>
            </div>
        </div>
    </div>

    <!-- Network Tools -->
    <div class="col-lg-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-tools"></i> Network Tools
                </h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <button class="btn btn-primary" onclick="pingTool()">
                        <i class="bi bi-wifi"></i> Ping Test
                    </button>
                    <button class="btn btn-info" onclick="traceroute()">
                        <i class="bi bi-diagram-2"></i> Traceroute
                    </button>
                    <button class="btn btn-success" onclick="portScan()">
                        <i class="bi bi-door-open"></i> Port Scanner
                    </button>
                    <button class="btn btn-warning" onclick="bandwidthTest()">
                        <i class="bi bi-speedometer"></i> Speed Test
                    </button>
                    <button class="btn btn-secondary" onclick="dnsLookup()">
                        <i class="bi bi-globe"></i> DNS Lookup
                    </button>
                </div>
                
                <!-- Tool Output -->
                <div class="mt-3">
                    <label class="form-label">Tool Output:</label>
                    <textarea class="form-control bg-dark text-light" id="toolOutput" rows="8" readonly style="font-family: monospace;">
Network tools ready...
Run any tool above to see output here.
                    </textarea>
                </div>
            </div>
        </div>
        
        <!-- Quick Ping Targets -->
        <div class="card mt-3">
            <div class="card-header">
                <h6 class="card-title mb-0">
                    <i class="bi bi-bullseye"></i> Quick Ping
                </h6>
            </div>
            <div class="card-body">
                <div class="input-group mb-2">
                    <input type="text" class="form-control" id="customPingTarget" placeholder="IP or hostname">
                    <button class="btn btn-outline-primary" onclick="quickPing()">
                        <i class="bi bi-play"></i>
                    </button>
                </div>
                
                <div class="list-group list-group-flush">
                    <button class="list-group-item list-group-item-action d-flex justify-content-between" onclick="pingDevice('8.8.8.8')">
                        <span><i class="bi bi-globe"></i> Google DNS</span>
                        <small>8.8.8.8</small>
                    </button>
                    <button class="list-group-item list-group-item-action d-flex justify-content-between" onclick="pingDevice('1.1.1.1')">
                        <span><i class="bi bi-shield"></i> Cloudflare DNS</span>
                        <small>1.1.1.1</small>
                    </button>
                    <button class="list-group-item list-group-item-action d-flex justify-content-between" onclick="pingDevice('192.168.1.1')">
                        <span><i class="bi bi-router"></i> Default Gateway</span>
                        <small>192.168.1.1</small>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Network Scan Modal -->
<div class="modal fade" id="networkScanModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-radar"></i> Network Scanner
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <label class="form-label">IP Range:</label>
                        <input type="text" class="form-control" id="scanRange" value="192.168.1.1-254">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Scan Type:</label>
                        <select class="form-control" id="scanType">
                            <option value="ping">Ping Scan</option>
                            <option value="port">Port Scan</option>
                            <option value="full">Full Scan</option>
                        </select>
                    </div>
                </div>
                
                <div class="mt-3">
                    <button class="btn btn-primary" onclick="executeScan()">
                        <i class="bi bi-play"></i> Start Scan
                    </button>
                    <button class="btn btn-secondary" onclick="stopScan()">
                        <i class="bi bi-stop"></i> Stop
                    </button>
                </div>
                
                <div class="mt-3">
                    <div class="progress">
                        <div class="progress-bar" id="scanProgress" style="width: 0%"></div>
                    </div>
                </div>
                
                <div class="mt-3">
                    <pre id="scanResults" class="bg-dark text-light p-3" style="height: 300px; overflow-y: auto;">
Scan results will appear here...
                    </pre>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
// Network Dashboard JavaScript
let scanInterval = null;

function refreshNetwork() {
    showToast('Refreshing network data...', 'info');
    
    // Update local IP
    fetch('/network/api/status')
        .then(response => response.json())
        .then(data => {
            document.getElementById('localIP').textContent = data.local_ip || 'Unknown';
            document.getElementById('serverIP').textContent = data.server_ip || '127.0.0.1';
            showToast('Network data refreshed', 'success');
        })
        .catch(error => {
            showToast('Failed to refresh network data', 'danger');
        });
}

function runNetworkScan() {
    const modal = new bootstrap.Modal(document.getElementById('networkScanModal'));
    modal.show();
}

function pingTest() {
    const target = prompt('Enter IP or hostname to ping:', '8.8.8.8');
    if (target) {
        pingDevice(target);
    }
}

function pingDevice(target) {
    showToast(`Pinging ${target}...`, 'info');
    
    const output = document.getElementById('toolOutput');
    output.value = `Pinging ${target}...\n`;
    
    fetch('/network/api/ping', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({target: target})
    })
    .then(response => response.json())
    .then(data => {
        output.value = data.output || 'Ping completed';
        if (data.success) {
            showToast(`Ping to ${target} successful`, 'success');
        } else {
            showToast(`Ping to ${target} failed`, 'warning');
        }
    })
    .catch(error => {
        output.value = 'Error: Could not complete ping';
        showToast('Ping failed', 'danger');
    });
}

function quickPing() {
    const target = document.getElementById('customPingTarget').value;
    if (target) {
        pingDevice(target);
    }
}

function scanDevices() {
    showToast('Scanning for network devices...', 'info');
    
    fetch('/network/api/scan')
        .then(response => response.json())
        .then(data => {
            updateDevicesTable(data.devices || []);
            showToast(`Found ${data.devices?.length || 0} devices`, 'success');
        })
        .catch(error => {
            showToast('Device scan failed', 'danger');
        });
}

function updateDevicesTable(devices) {
    const tbody = document.getElementById('devicesTable');
    // Keep existing static rows, add dynamic ones
    
    devices.forEach(device => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>
                <i class="bi bi-hdd-network text-info"></i> ${device.name || 'Unknown Device'}
            </td>
            <td>${device.ip}</td>
            <td>${device.mac || 'Unknown'}</td>
            <td>
                <span class="badge bg-${device.online ? 'success' : 'danger'}">
                    <span class="status-indicator status-${device.online ? 'online' : 'offline'}"></span>
                    ${device.online ? 'Online' : 'Offline'}
                </span>
            </td>
            <td>
                <button class="btn btn-sm btn-outline-info" onclick="pingDevice('${device.ip}')">
                    <i class="bi bi-wifi"></i> Ping
                </button>
            </td>
        `;
        tbody.appendChild(row);
    });
}

function pingTool() {
    document.getElementById('toolOutput').value = 'Ping tool selected. Use Quick Ping section or enter custom target.';
}

function traceroute() {
    const target = prompt('Enter target for traceroute:', '8.8.8.8');
    if (target) {
        const output = document.getElementById('toolOutput');
        output.value = `Running traceroute to ${target}...\n`;
        
        // TODO: Implement actual traceroute
        setTimeout(() => {
            output.value += `Traceroute to ${target} completed.\n`;
            output.value += `1. 192.168.1.1 (2ms)\n`;
            output.value += `2. 10.0.0.1 (15ms)\n`;
            output.value += `3. ${target} (25ms)\n`;
        }, 2000);
    }
}

function portScan() {
    const target = prompt('Enter IP for port scan:', '192.168.1.1');
    if (target) {
        const output = document.getElementById('toolOutput');
        output.value = `Scanning common ports on ${target}...\n`;
        
        // TODO: Implement actual port scan
        setTimeout(() => {
            output.value += `Port scan results for ${target}:\n`;
            output.value += `22/tcp  open  ssh\n`;
            output.value += `80/tcp  open  http\n`;
            output.value += `443/tcp open  https\n`;
            output.value += `Scan completed.\n`;
        }, 3000);
    }
}

function bandwidthTest() {
    const output = document.getElementById('toolOutput');
    output.value = 'Starting bandwidth test...\n';
    
    showToast('Running speed test...', 'info');
    
    // TODO: Implement actual bandwidth test
    setTimeout(() => {
        output.value += 'Download speed: 100 Mbps\n';
        output.value += 'Upload speed: 50 Mbps\n';
        output.value += 'Ping: 15 ms\n';
        document.getElementById('networkSpeed').textContent = '100 Mbps';
        showToast('Speed test completed', 'success');
    }, 5000);
}

function dnsLookup() {
    const hostname = prompt('Enter hostname for DNS lookup:', 'google.com');
    if (hostname) {
        const output = document.getElementById('toolOutput');
        output.value = `DNS lookup for ${hostname}...\n`;
        
        // TODO: Implement actual DNS lookup
        setTimeout(() => {
            output.value += `${hostname} resolves to:\n`;
            output.value += `172.217.164.110\n`;
            output.value += `2607:f8b0:4004:c1b::71\n`;
        }, 1000);
    }
}

function executeScan() {
    const range = document.getElementById('scanRange').value;
    const type = document.getElementById('scanType').value;
    const results = document.getElementById('scanResults');
    const progress = document.getElementById('scanProgress');
    
    results.textContent = `Starting ${type} scan of ${range}...\n`;
    progress.style.width = '0%';
    
    // TODO: Implement actual network scanning
    let progressValue = 0;
    scanInterval = setInterval(() => {
        progressValue += 10;
        progress.style.width = progressValue + '%';
        
        if (progressValue >= 100) {
            clearInterval(scanInterval);
            results.textContent += '\nScan completed.\n';
            results.textContent += 'Found 5 active devices.\n';
            showToast('Network scan completed', 'success');
        }
    }, 500);
}

function stopScan() {
    if (scanInterval) {
        clearInterval(scanInterval);
        document.getElementById('scanResults').textContent += '\nScan stopped by user.\n';
        showToast('Scan stopped', 'warning');
    }
}

function viewLogs(device) {
    showToast(`Opening logs for ${device}...`, 'info');
    // TODO: Implement log viewer
}

// Auto-refresh network data
setInterval(() => {
    if (document.querySelector('[data-auto-refresh="true"]')) {
        refreshNetwork();
    }
}, 30000);

// Initialize on page load
document.addEventListener('DOMContentLoaded', () => {
    refreshNetwork();
});
</script>
{% endblock %}
