<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>⚙️ AI Settings - NoxPanel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .settings-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 2rem;
            margin: 2rem 0;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }
        
        .model-config {
            background: #f8fafc;
            border: 1px solid #e5e7eb;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .form-label {
            font-weight: 600;
            color: #374151;
        }
        
        .form-control {
            border-radius: 6px;
            border: 1px solid #d1d5db;
        }
        
        .form-control:focus {
            border-color: #2563eb;
            box-shadow: 0 0 0 0.2rem rgba(37, 99, 235, 0.25);
        }
        
        .model-header {
            background: linear-gradient(135deg, #2563eb 0%, #3b82f6 100%);
            color: white;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
        }
        
        .model-header h5 {
            margin: 0;
            font-weight: 600;
        }
        
        .advanced-settings {
            background: #fff;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            padding: 1rem;
            margin-top: 1rem;
        }
        
        .help-text {
            font-size: 0.875rem;
            color: #6b7280;
            margin-top: 0.25rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="settings-container">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-cog"></i> AI Model Settings</h2>
                <a href="{{ url_for('ai.dashboard') }}" class="btn btn-primary">
                    <i class="fas fa-arrow-left"></i> Back to Dashboard
                </a>
            </div>
            
            <form method="POST">
                {% for model_key, model in models.items() %}
                <div class="model-config">
                    <div class="model-header">
                        <h5>{{ model.name }} Configuration</h5>
                        <small>Provider: {{ model.provider }}</small>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="{{ model_key }}_endpoint" class="form-label">Endpoint URL</label>
                                <input type="url" class="form-control" 
                                       id="{{ model_key }}_endpoint" 
                                       name="{{ model_key }}_endpoint" 
                                       value="{{ model.endpoint }}" required>
                                <div class="help-text">Full URL including protocol (http/https)</div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="{{ model_key }}_port" class="form-label">Port</label>
                                <input type="number" class="form-control" 
                                       id="{{ model_key }}_port" 
                                       name="{{ model_key }}_port" 
                                       value="{{ model.port }}" 
                                       min="1" max="65535" required>
                                <div class="help-text">Service port number (1-65535)</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="{{ model_key }}_start_command" class="form-label">Start Command</label>
                        <input type="text" class="form-control" 
                               id="{{ model_key }}_start_command" 
                               name="{{ model_key }}_start_command" 
                               value="{{ model.start_command }}" required>
                        <div class="help-text">Command to start the AI service</div>
                    </div>
                    
                    <div class="advanced-settings">
                        <h6><i class="fas fa-cog"></i> Advanced Settings</h6>
                        
                        <div class="row">
                            <div class="col-md-8">
                                <div class="mb-3">
                                    <label for="{{ model_key }}_test_prompt" class="form-label">Test Prompt</label>
                                    <input type="text" class="form-control" 
                                           id="{{ model_key }}_test_prompt" 
                                           name="{{ model_key }}_test_prompt" 
                                           value="{{ model.test_prompt }}" required>
                                    <div class="help-text">Prompt used for communication testing</div>
                                </div>
                            </div>
                            
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label for="{{ model_key }}_max_restart_attempts" class="form-label">Max Restart Attempts</label>
                                    <input type="number" class="form-control" 
                                           id="{{ model_key }}_max_restart_attempts" 
                                           name="{{ model_key }}_max_restart_attempts" 
                                           value="{{ model.max_restart_attempts }}" 
                                           min="1" max="10" required>
                                    <div class="help-text">Maximum auto-restart attempts</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                {% endfor %}
                
                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-success btn-lg">
                        <i class="fas fa-save"></i> Save Configuration
                    </button>
                    <a href="{{ url_for('ai.dashboard') }}" class="btn btn-secondary btn-lg ms-3">
                        <i class="fas fa-times"></i> Cancel
                    </a>
                </div>
            </form>
            
            <div class="mt-5 p-4 bg-light rounded">
                <h5><i class="fas fa-info-circle"></i> Configuration Help</h5>
                <div class="row">
                    <div class="col-md-6">
                        <h6>Endpoint URLs:</h6>
                        <ul class="small">
                            <li><strong>Ollama:</strong> http://localhost:11434</li>
                            <li><strong>LM Studio:</strong> http://localhost:1234</li>
                            <li><strong>LocalAI:</strong> http://localhost:8080</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h6>Common Start Commands:</h6>
                        <ul class="small">
                            <li><strong>Ollama:</strong> ollama serve</li>
                            <li><strong>LM Studio:</strong> lmstudio --server</li>
                            <li><strong>LocalAI:</strong> local-ai</li>
                        </ul>
                    </div>
                </div>
                <div class="mt-3">
                    <h6>Test Prompts:</h6>
                    <p class="small">Keep test prompts short and simple to minimize response time and resource usage. Examples: "Hello", "Say hi", "Test response"</p>
                </div>
            </div>
            
            <div class="text-center mt-4">
                <small class="text-muted">Last updated: {{ timestamp.strftime('%Y-%m-%d %H:%M:%S') }}</small>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Form validation
        document.querySelector('form').addEventListener('submit', function(e) {
            const inputs = this.querySelectorAll('input[required]');
            let isValid = true;
            
            inputs.forEach(input => {
                if (!input.value.trim()) {
                    input.classList.add('is-invalid');
                    isValid = false;
                } else {
                    input.classList.remove('is-invalid');
                }
            });
            
            if (!isValid) {
                e.preventDefault();
                alert('Please fill in all required fields.');
            }
        });
        
        // Port validation
        document.querySelectorAll('input[type="number"]').forEach(input => {
            if (input.name.includes('_port')) {
                input.addEventListener('change', function() {
                    const port = parseInt(this.value);
                    if (port < 1 || port > 65535) {
                        this.classList.add('is-invalid');
                    } else {
                        this.classList.remove('is-invalid');
                    }
                });
            }
        });
        
        // URL validation
        document.querySelectorAll('input[type="url"]').forEach(input => {
            input.addEventListener('change', function() {
                try {
                    new URL(this.value);
                    this.classList.remove('is-invalid');
                } catch {
                    this.classList.add('is-invalid');
                }
            });
        });
    </script>
</body>
</html>
