#!/usr/bin/env python3
"""Test the enhanced plugin system features"""

from unified_plugin_system_clean import UnifiedPluginSystem
import json


def test_enhanced_plugin_system():
    """Test enhanced plugin system features"""
    print("Testing Enhanced Plugin System...")

    # Test enhanced plugin system
    plugin_system = UnifiedPluginSystem()
    print('Enhanced Plugin System Features:')
    print(
        f'- Security Validator: {plugin_system.security_validator is not None}')
    print(
        f'- Dependency Manager: {plugin_system.dependency_manager is not None}')
    print(f'- Plugin Monitor: {plugin_system.plugin_monitor is not None}')
    print(
        f'- Lifecycle Manager: {plugin_system.lifecycle_manager is not None}')
    print(f'- Sandbox: {plugin_system.sandbox is not None}')

    # Test API endpoints
    endpoints = plugin_system.get_api_endpoints()
    print(f'- API Endpoints: {len(endpoints)} documented endpoints')

    # Test compliance validation
    compliance = plugin_system.validate_audit_2_compliance()
    print(f'- Audit 2 Compliance: {compliance["overall_compliance"]}')

    # Test system metrics
    system_metrics = plugin_system.get_system_metrics()
    print(f'- System Metrics Available: {len(system_metrics)} metrics')

    # Test security summary
    security_summary = plugin_system.get_security_summary()
    print(
        f'- Security Summary: {security_summary["total_plugins"]} plugins evaluated')

    print('\nPlugin System Enhancement: SUCCESS')
    return True


if __name__ == '__main__':
    test_enhanced_plugin_system()
