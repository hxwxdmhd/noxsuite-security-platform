{
  "module": "AI\\NoxPanel\\scripts\\ultra_port_mapper.py",
  "timestamp": "2025-07-18T11:02:36.872274",
  "total_functions": 29,
  "test_cases": [
    {
      "name": "test___init___positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "project_root": "valid_project_root"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test___init___edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "project_root": "edge_project_root"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test___init___error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "project_root": "invalid_project_root"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_ultra_scan_port_usage_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_ultra_scan_port_usage_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_ultra_scan_port_usage_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_crawl_git_templates_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_crawl_git_templates_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_crawl_git_templates_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__analyze_git_repository_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repo_url": "valid_repo_url"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__analyze_git_repository_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repo_url": "edge_repo_url"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__analyze_git_repository_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repo_url": "invalid_repo_url"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__detect_framework_from_url_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "url": "valid_url"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__detect_framework_from_url_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "url": "edge_url"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__detect_framework_from_url_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "url": "invalid_url"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__calculate_popularity_score_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repo_url": "valid_repo_url"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__calculate_popularity_score_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repo_url": "edge_repo_url"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__calculate_popularity_score_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repo_url": "invalid_repo_url"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__extract_features_from_name_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repo_name": "valid_repo_name"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__extract_features_from_name_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repo_name": "edge_repo_name"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__extract_features_from_name_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repo_name": "invalid_repo_name"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__generate_port_config_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repo_name": "valid_repo_name"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__generate_port_config_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repo_name": "edge_repo_name"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__generate_port_config_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repo_name": "invalid_repo_name"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__calculate_port_confidence_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "content": "valid_content",
        "port": "valid_port",
        "pattern": "valid_pattern"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__calculate_port_confidence_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "content": "edge_content",
        "port": "edge_port",
        "pattern": "edge_pattern"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__calculate_port_confidence_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "content": "invalid_content",
        "port": "invalid_port",
        "pattern": "invalid_pattern"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__extract_enhanced_context_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "content": "valid_content",
        "port": "valid_port"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__extract_enhanced_context_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "content": "edge_content",
        "port": "edge_port"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__extract_enhanced_context_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "content": "invalid_content",
        "port": "invalid_port"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__find_line_number_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "content": "valid_content",
        "port": "valid_port"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__find_line_number_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "content": "edge_content",
        "port": "edge_port"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__find_line_number_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "content": "invalid_content",
        "port": "invalid_port"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__extract_function_context_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "content": "valid_content",
        "port": "valid_port"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__extract_function_context_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "content": "edge_content",
        "port": "edge_port"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__extract_function_context_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "content": "invalid_content",
        "port": "invalid_port"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__extract_variable_context_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "content": "valid_content",
        "port": "valid_port"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__extract_variable_context_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "content": "edge_content",
        "port": "edge_port"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__extract_variable_context_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "content": "invalid_content",
        "port": "invalid_port"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__scan_system_ports_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__scan_system_ports_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__scan_system_ports_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__scan_network_interfaces_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__scan_network_interfaces_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__scan_network_interfaces_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__scan_running_processes_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__scan_running_processes_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__scan_running_processes_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_generate_ml_recommendations_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_generate_ml_recommendations_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_generate_ml_recommendations_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_generate_ultra_analysis_report_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_generate_ultra_analysis_report_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_generate_ultra_analysis_report_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__get_high_confidence_ports_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "port_data": "valid_port_data"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__get_high_confidence_ports_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "port_data": "edge_port_data"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__get_high_confidence_ports_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "port_data": "invalid_port_data"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__analyze_port_distribution_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "port_data": "valid_port_data"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__analyze_port_distribution_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "port_data": "edge_port_data"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__analyze_port_distribution_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "port_data": "invalid_port_data"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__analyze_port_security_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "port_data": "valid_port_data"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__analyze_port_security_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "port_data": "edge_port_data"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__analyze_port_security_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "port_data": "invalid_port_data"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__get_recommended_templates_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "templates": "valid_templates"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__get_recommended_templates_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "templates": "edge_templates"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__get_recommended_templates_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "templates": "invalid_templates"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__analyze_framework_distribution_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "templates": "valid_templates"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__analyze_framework_distribution_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "templates": "edge_templates"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__analyze_framework_distribution_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "templates": "invalid_templates"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__generate_compatibility_matrix_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "templates": "valid_templates"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__generate_compatibility_matrix_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "templates": "edge_templates"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__generate_compatibility_matrix_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "templates": "invalid_templates"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__identify_critical_issues_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "port_data": "valid_port_data"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__identify_critical_issues_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "port_data": "edge_port_data"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__identify_critical_issues_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "port_data": "invalid_port_data"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__identify_security_concerns_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "port_data": "valid_port_data"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__identify_security_concerns_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "port_data": "edge_port_data"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__identify_security_concerns_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "port_data": "invalid_port_data"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__generate_mitigation_strategies_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__generate_mitigation_strategies_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__generate_mitigation_strategies_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_save_ultra_analysis_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "output_file": "valid_output_file"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_save_ultra_analysis_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "output_file": "edge_output_file"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_save_ultra_analysis_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "output_file": "invalid_output_file"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_print_ultra_summary_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_print_ultra_summary_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_print_ultra_summary_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    }
  ]
}