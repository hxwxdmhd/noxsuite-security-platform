{
  "module": "AI\\NoxPanel\\scripts\\git_template_integrator.py",
  "timestamp": "2025-07-18T11:02:35.436433",
  "total_functions": 27,
  "test_cases": [
    {
      "name": "test___init___positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "project_root": "valid_project_root",
        "target_accuracy": "valid_target_accuracy"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test___init___edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "project_root": "edge_project_root",
        "target_accuracy": "edge_target_accuracy"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test___init___error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "project_root": "invalid_project_root",
        "target_accuracy": "invalid_target_accuracy"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_analyze_current_architecture_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_analyze_current_architecture_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_analyze_current_architecture_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__detect_flask_version_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__detect_flask_version_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__detect_flask_version_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__detect_existing_features_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__detect_existing_features_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__detect_existing_features_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__detect_architecture_pattern_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__detect_architecture_pattern_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__detect_architecture_pattern_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__detect_ui_framework_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__detect_ui_framework_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__detect_ui_framework_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__detect_database_usage_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__detect_database_usage_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__detect_database_usage_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__detect_auth_system_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__detect_auth_system_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__detect_auth_system_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__count_api_endpoints_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__count_api_endpoints_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__count_api_endpoints_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__detect_template_engine_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__detect_template_engine_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__detect_template_engine_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__analyze_static_assets_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__analyze_static_assets_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__analyze_static_assets_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__calculate_compatibility_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "current_analysis": "valid_current_analysis",
        "repo_info": "valid_repo_info"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__calculate_compatibility_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "current_analysis": "edge_current_analysis",
        "repo_info": "edge_repo_info"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__calculate_compatibility_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "current_analysis": "invalid_current_analysis",
        "repo_info": "invalid_repo_info"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_select_optimal_templates_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "architecture_analysis": "valid_architecture_analysis"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_select_optimal_templates_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "architecture_analysis": "edge_architecture_analysis"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_select_optimal_templates_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "architecture_analysis": "invalid_architecture_analysis"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_download_and_analyze_template_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repository": "valid_repository"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_download_and_analyze_template_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repository": "edge_repository"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_download_and_analyze_template_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repository": "invalid_repository"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__simulate_file_analysis_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repository": "valid_repository"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__simulate_file_analysis_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repository": "edge_repository"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__simulate_file_analysis_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repository": "invalid_repository"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__extract_key_patterns_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repository": "valid_repository"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__extract_key_patterns_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repository": "edge_repository"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__extract_key_patterns_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repository": "invalid_repository"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__assess_integration_complexity_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repository": "valid_repository"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__assess_integration_complexity_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repository": "edge_repository"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__assess_integration_complexity_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repository": "invalid_repository"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__identify_dependencies_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repository": "valid_repository"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__identify_dependencies_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repository": "edge_repository"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__identify_dependencies_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repository": "invalid_repository"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__find_config_files_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repository": "valid_repository"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__find_config_files_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repository": "edge_repository"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__find_config_files_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repository": "invalid_repository"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__find_template_files_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repository": "valid_repository"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__find_template_files_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repository": "edge_repository"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__find_template_files_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repository": "invalid_repository"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__analyze_template_assets_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "repository": "valid_repository"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__analyze_template_assets_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "repository": "edge_repository"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__analyze_template_assets_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "repository": "invalid_repository"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_create_integration_plan_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "selected_templates": "valid_selected_templates"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_create_integration_plan_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "selected_templates": "edge_selected_templates"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_create_integration_plan_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "selected_templates": "invalid_selected_templates"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__plan_file_modifications_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "analysis": "valid_analysis"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__plan_file_modifications_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "analysis": "edge_analysis"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__plan_file_modifications_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "analysis": "invalid_analysis"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__plan_testing_scope_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "template": "valid_template"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__plan_testing_scope_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "template": "edge_template"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__plan_testing_scope_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "template": "invalid_template"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_execute_integration_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "integration_plan": "valid_integration_plan",
        "dry_run": "valid_dry_run"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_execute_integration_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "integration_plan": "edge_integration_plan",
        "dry_run": "edge_dry_run"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_execute_integration_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "integration_plan": "invalid_integration_plan",
        "dry_run": "invalid_dry_run"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_generate_enhanced_noxpanel_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_generate_enhanced_noxpanel_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_generate_enhanced_noxpanel_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_save_enhancement_report_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "report": "valid_report",
        "filename": "valid_filename"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_save_enhancement_report_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "report": "edge_report",
        "filename": "edge_filename"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_save_enhancement_report_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "report": "invalid_report",
        "filename": "invalid_filename"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    }
  ]
}