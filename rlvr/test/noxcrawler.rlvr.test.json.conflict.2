{
  "module": "AI\\NoxPanel\\noxcrawler.py",
  "timestamp": "2025-07-18T11:02:24.488563",
  "total_functions": 10,
  "test_cases": [
    {
      "name": "test_main_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {},
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_main_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {},
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_main_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {},
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test___init___positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "storage_path": "valid_storage_path"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test___init___edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "storage_path": "edge_storage_path"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test___init___error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "storage_path": "invalid_storage_path"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__is_url_allowed_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "url": "valid_url"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__is_url_allowed_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "url": "edge_url"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__is_url_allowed_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "url": "invalid_url"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__extract_content_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "response": "valid_response"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__extract_content_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "response": "edge_response"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__extract_content_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "response": "invalid_response"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__categorize_content_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "title": "valid_title",
        "content": "valid_content",
        "metadata": "valid_metadata"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__categorize_content_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "title": "edge_title",
        "content": "edge_content",
        "metadata": "edge_metadata"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__categorize_content_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "title": "invalid_title",
        "content": "invalid_content",
        "metadata": "invalid_metadata"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test__assess_content_quality_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "result": "valid_result"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test__assess_content_quality_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "result": "edge_result"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test__assess_content_quality_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "result": "invalid_result"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_crawl_url_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "url": "valid_url",
        "max_depth": "valid_max_depth"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_crawl_url_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "url": "edge_url",
        "max_depth": "edge_max_depth"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_crawl_url_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "url": "invalid_url",
        "max_depth": "invalid_max_depth"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_save_results_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "results": "valid_results",
        "filename": "valid_filename"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_save_results_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "results": "edge_results",
        "filename": "edge_filename"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_save_results_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "results": "invalid_results",
        "filename": "invalid_filename"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_load_results_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "filename": "valid_filename"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_load_results_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "filename": "edge_filename"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_load_results_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "filename": "invalid_filename"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_get_statistics_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_get_statistics_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_get_statistics_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    }
  ]
}