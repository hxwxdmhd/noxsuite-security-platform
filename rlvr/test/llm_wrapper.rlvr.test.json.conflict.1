{
  "module": "nox_assistant\\llm_wrapper.py",
  "timestamp": "2025-07-18T11:02:14.895059",
  "total_functions": 11,
  "test_cases": [
    {
      "name": "test_main_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {},
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_main_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {},
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_main_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {},
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test___init___positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "ollama_url": "valid_ollama_url"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test___init___edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "ollama_url": "edge_ollama_url"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test___init___error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "ollama_url": "invalid_ollama_url"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_check_connection_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_check_connection_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_check_connection_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_refresh_available_models_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_refresh_available_models_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_refresh_available_models_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_get_best_model_for_task_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "task_type": "valid_task_type"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_get_best_model_for_task_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "task_type": "edge_task_type"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_get_best_model_for_task_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "task_type": "invalid_task_type"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_generate_system_prompt_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "task_type": "valid_task_type",
        "context": "valid_context"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_generate_system_prompt_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "task_type": "edge_task_type",
        "context": "edge_context"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_generate_system_prompt_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "task_type": "invalid_task_type",
        "context": "invalid_context"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_query_model_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "prompt": "valid_prompt",
        "model": "valid_model",
        "task_type": "valid_task_type",
        "context": "valid_context",
        "max_tokens": "valid_max_tokens"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_query_model_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "prompt": "edge_prompt",
        "model": "edge_model",
        "task_type": "edge_task_type",
        "context": "edge_context",
        "max_tokens": "edge_max_tokens"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_query_model_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "prompt": "invalid_prompt",
        "model": "invalid_model",
        "task_type": "invalid_task_type",
        "context": "invalid_context",
        "max_tokens": "invalid_max_tokens"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_format_ai_response_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "response": "valid_response",
        "model": "valid_model",
        "response_time": "valid_response_time"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_format_ai_response_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "response": "edge_response",
        "model": "edge_model",
        "response_time": "edge_response_time"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_format_ai_response_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "response": "invalid_response",
        "model": "invalid_model",
        "response_time": "invalid_response_time"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_fallback_response_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "prompt": "valid_prompt",
        "task_type": "valid_task_type"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_fallback_response_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "prompt": "edge_prompt",
        "task_type": "edge_task_type"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_fallback_response_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "prompt": "invalid_prompt",
        "task_type": "invalid_task_type"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_get_model_status_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_get_model_status_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_get_model_status_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_test_model_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "model": "valid_model"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_test_model_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "model": "edge_model"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_test_model_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "model": "invalid_model"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    }
  ]
}