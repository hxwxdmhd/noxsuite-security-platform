{
  "module": "rlvr_phase2_enhancer.py",
  "timestamp": "2025-07-18T11:02:11.130920",
  "total_functions": 10,
  "test_cases": [
    {
      "name": "test___init___positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "workspace_path": "valid_workspace_path"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test___init___edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "workspace_path": "edge_workspace_path"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test___init___error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "workspace_path": "invalid_workspace_path"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_setup_directories_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_setup_directories_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_setup_directories_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_analyze_python_file_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "file_path": "valid_file_path"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_analyze_python_file_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "file_path": "edge_file_path"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_analyze_python_file_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "file_path": "invalid_file_path"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_calculate_complexity_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "node": "valid_node"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_calculate_complexity_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "node": "edge_node"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_calculate_complexity_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "node": "invalid_node"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_classify_function_type_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "name": "valid_name",
        "docstring": "valid_docstring"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_classify_function_type_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "name": "edge_name",
        "docstring": "edge_docstring"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_classify_function_type_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "name": "invalid_name",
        "docstring": "invalid_docstring"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_generate_test_cases_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "func_info": "valid_func_info"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_generate_test_cases_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "func_info": "edge_func_info"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_generate_test_cases_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "func_info": "invalid_func_info"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_inject_rlvr_annotation_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "file_path": "valid_file_path",
        "func_info": "valid_func_info",
        "annotation": "valid_annotation"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_inject_rlvr_annotation_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "file_path": "edge_file_path",
        "func_info": "edge_func_info",
        "annotation": "edge_annotation"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_inject_rlvr_annotation_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "file_path": "invalid_file_path",
        "func_info": "invalid_func_info",
        "annotation": "invalid_annotation"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_save_test_file_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self",
        "file_path": "valid_file_path",
        "annotations": "valid_annotations"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_save_test_file_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self",
        "file_path": "edge_file_path",
        "annotations": "edge_annotations"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_save_test_file_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self",
        "file_path": "invalid_file_path",
        "annotations": "invalid_annotations"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_scan_backend_modules_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_scan_backend_modules_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_scan_backend_modules_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    },
    {
      "name": "test_generate_coverage_map_positive",
      "reasoning": "Tests successful execution path with valid inputs",
      "input": {
        "self": "valid_self"
      },
      "expected": "success",
      "validates": "Normal operation flow"
    },
    {
      "name": "test_generate_coverage_map_edge_case",
      "reasoning": "Tests boundary conditions and edge cases",
      "input": {
        "self": "edge_self"
      },
      "expected": "handled_gracefully",
      "validates": "Edge case handling"
    },
    {
      "name": "test_generate_coverage_map_error",
      "reasoning": "Tests error handling with invalid inputs",
      "input": {
        "self": "invalid_self"
      },
      "expected": "appropriate_exception",
      "validates": "Error handling robustness"
    }
  ]
}