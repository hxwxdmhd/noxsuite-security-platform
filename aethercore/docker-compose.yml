# AetherCore MSP Server Docker Configuration
# Docker Compose configuration for AetherCore integration

version: "3.8"

services:
  # AetherCore MSP Server
  aethercore:
    build:
      context: ./aethercore
      dockerfile: Dockerfile
    image: hobelab/aethercore:latest
    container_name: aethercore-msp
    restart: unless-stopped

    environment:
      - AETHERCORE_HOST=0.0.0.0
      - AETHERCORE_PORT=8001
      - AETHERCORE_LOG_LEVEL=INFO
      - AETHERCORE_REDIS_URL=redis://redis:6379
      - AETHERCORE_MAX_WORKERS=4
      - AETHERCORE_MODEL_CACHE_SIZE=1000
      - CUDA_VISIBLE_DEVICES=0  # Enable GPU if available

    ports:
      - "8001:8001"

    volumes:
      - aethercore-models:/app/models
      - aethercore-logs:/app/logs
      - aethercore-cache:/app/cache

    networks:
      - heimnetz-network

    depends_on:
      - redis
      - prometheus

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # GPU support (uncomment if NVIDIA GPU available)
    # runtime: nvidia
    # environment:
    #   - NVIDIA_VISIBLE_DEVICES=all

  # Model Registry Service
  model-registry:
    image: postgres:15-alpine
    container_name: aethercore-registry
    restart: unless-stopped

    environment:
      - POSTGRES_DB=aethercore_registry
      - POSTGRES_USER=aethercore
      - POSTGRES_PASSWORD=aethercore_registry_password

    volumes:
      - aethercore-registry:/var/lib/postgresql/data
      - ./aethercore/sql/registry_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro

    networks:
      - heimnetz-network

    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.2'

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aethercore"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Model Storage (MinIO S3-compatible)
  model-storage:
    image: minio/minio:latest
    container_name: aethercore-storage
    restart: unless-stopped

    environment:
      - MINIO_ROOT_USER=aethercore
      - MINIO_ROOT_PASSWORD=aethercore_storage_password

    command: server /data --console-address ":9001"

    ports:
      - "9000:9000"
      - "9001:9001"

    volumes:
      - aethercore-storage:/data

    networks:
      - heimnetz-network

    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

# Additional volumes for AetherCore
volumes:
  aethercore-models:
    driver: local
  aethercore-logs:
    driver: local
  aethercore-cache:
    driver: local
  aethercore-registry:
    driver: local
  aethercore-storage:
    driver: local

# Service discovery labels
labels:
  - "heimnetz.service=aethercore"
  - "heimnetz.component=model-serving"
  - "heimnetz.version=1.0.0"
