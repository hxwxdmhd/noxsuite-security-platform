# Default values for Heimnetz Ultimate Suite v11.0
# This is a YAML-formatted file.

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Application settings
app:
  name: heimnetz-production
  version: "11.0"
  environment: production
  
# Image settings
image:
  registry: docker.io
  repository: heimnetz/production
  tag: "v11.0"
  pullPolicy: IfNotPresent
  pullSecrets: []

# Deployment settings
deployment:
  replicaCount: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  
  # Container resources
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  # Health checks
  livenessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    enabled: true
    path: /ready
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Service settings
service:
  type: ClusterIP
  port: 80
  targetPort: 5004
  annotations: {}
  
  # Metrics service
  metrics:
    enabled: true
    port: 9090
    targetPort: 9090

# Ingress settings
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  
  hosts:
    - host: heimnetz.production.com
      paths:
        - path: /
          pathType: Prefix
    - host: api.heimnetz.production.com
      paths:
        - path: /api
          pathType: Prefix
  
  tls:
    - secretName: heimnetz-tls
      hosts:
        - heimnetz.production.com
        - api.heimnetz.production.com

# Autoscaling settings
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  
  # Scaling behavior
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Security settings
security:
  enabled: true
  serviceAccount:
    create: true
    name: ""
    annotations: {}
  
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 2000
  
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    capabilities:
      drop:
        - ALL

# Persistence settings
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 5Gi
  annotations: {}

# Configuration
config:
  # Flask settings
  flask:
    host: "0.0.0.0"
    port: 5004
    debug: false
    threaded: true
  
  # Security settings
  security:
    jwtExpiration: 3600
    mfaEnabled: true
    rateLimit: 100
    sessionTimeout: 1800
  
  # Monitoring settings
  monitoring:
    enabled: true
    metricsPort: 9090
    healthCheckInterval: 30
  
  # Logging settings
  logging:
    level: INFO
    format: json
    file: /data/logs/heimnetz.log

# Secrets
secrets:
  secretKey: ""
  jwtSecret: ""
  redisPassword: ""
  databaseKey: ""

# External services
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 1Gi
  replica:
    replicaCount: 1
    persistence:
      enabled: true
      size: 1Gi

postgresql:
  enabled: false
  auth:
    postgresPassword: ""
    username: heimnetz
    password: ""
    database: heimnetz
  primary:
    persistence:
      enabled: true
      size: 5Gi

# Monitoring and observability
monitoring:
  enabled: true
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      path: /metrics
  
  grafana:
    enabled: true
    dashboards:
      enabled: true
  
  alerts:
    enabled: true
    rules:
      - alert: HighCPUUsage
        expr: cpu_usage > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage detected"
      - alert: HighMemoryUsage
        expr: memory_usage > 85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage detected"

# Network policies
networkPolicy:
  enabled: true
  ingress:
    enabled: true
    from:
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
  egress:
    enabled: true
    to:
      - namespaceSelector:
          matchLabels:
            name: kube-system

# Node affinity and tolerations
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - heimnetz-production
          topologyKey: kubernetes.io/hostname
